!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!ObjectiveC	category	/category attached to the class/
!_TAG_FIELD_DESCRIPTION!ObjectiveC	protocols	/protocols that the class (or category) confirms to/
!_TAG_FIELD_DESCRIPTION!XML	uri	/uri associated with name prefix/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!JavaProperties	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!ObjectiveC	C,category	/categories/
!_TAG_KIND_DESCRIPTION!ObjectiveC	E,field	/Object field/
!_TAG_KIND_DESCRIPTION!ObjectiveC	I,implementation	/class implementation/
!_TAG_KIND_DESCRIPTION!ObjectiveC	M,macro	/A preprocessor macro/
!_TAG_KIND_DESCRIPTION!ObjectiveC	P,protocol	/Protocol/
!_TAG_KIND_DESCRIPTION!ObjectiveC	c,class	/Class' method/
!_TAG_KIND_DESCRIPTION!ObjectiveC	e,enum	/An enumeration/
!_TAG_KIND_DESCRIPTION!ObjectiveC	f,function	/A function/
!_TAG_KIND_DESCRIPTION!ObjectiveC	i,interface	/class interface/
!_TAG_KIND_DESCRIPTION!ObjectiveC	m,method	/Object's method/
!_TAG_KIND_DESCRIPTION!ObjectiveC	p,property	/A property/
!_TAG_KIND_DESCRIPTION!ObjectiveC	s,struct	/A type structure/
!_TAG_KIND_DESCRIPTION!ObjectiveC	t,typedef	/A type alias/
!_TAG_KIND_DESCRIPTION!ObjectiveC	v,var	/Global variable/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!TypeScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!TypeScript	G,generator	/generators/
!_TAG_KIND_DESCRIPTION!TypeScript	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!TypeScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!TypeScript	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!TypeScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!TypeScript	g,enum	/enums/
!_TAG_KIND_DESCRIPTION!TypeScript	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!TypeScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!TypeScript	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!TypeScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!TypeScript	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!XML	i,id	/id attributes/
!_TAG_KIND_DESCRIPTION!XML	n,nsprefix	/namespace prefixes/
!_TAG_KIND_DESCRIPTION!XML	r,root	/root elements/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaProperties	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!ObjectiveC	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!TypeScript	0.0	/current.age/
!_TAG_PARSER_VERSION!XML	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/n3rdy/dev/c/chips/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
$(OUT)	Makefile	/^$(OUT): $(OBJ)$/;"	t
$(PROJ)	Makefile	/^$(PROJ): $(OUT)$/;"	t
$(VERBOSE).SILENT	deps/minifb/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE)MAKESILENT	deps/minifb/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
%	deps/minifb/Makefile	/^% : %,v$/;"	t
%	deps/minifb/Makefile	/^% : RCS\/%$/;"	t
%	deps/minifb/Makefile	/^% : RCS\/%,v$/;"	t
%	deps/minifb/Makefile	/^% : SCCS\/s.%$/;"	t
%	deps/minifb/Makefile	/^% : s.%$/;"	t
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL :=  all$/;"	m
0	compile_commands.json	/^   "clang",$/;"	s	array:0.arguments
0	compile_commands.json	/^   "clang",$/;"	s	array:1.arguments
0	compile_commands.json	/^ {$/;"	o
1	compile_commands.json	/^   "-Wall",$/;"	s	array:0.arguments
1	compile_commands.json	/^   "-Wall",$/;"	s	array:1.arguments
1	compile_commands.json	/^ {$/;"	o
2	compile_commands.json	/^   "-Iinclude",$/;"	s	array:0.arguments
2	compile_commands.json	/^   "-Iinclude",$/;"	s	array:1.arguments
3	compile_commands.json	/^   "-I\/usr\/include\/SDL2",$/;"	s	array:0.arguments
3	compile_commands.json	/^   "-I\/usr\/include\/SDL2",$/;"	s	array:1.arguments
4	compile_commands.json	/^   "-D_REENTRANT",$/;"	s	array:0.arguments
4	compile_commands.json	/^   "-D_REENTRANT",$/;"	s	array:1.arguments
5	compile_commands.json	/^   "-c",$/;"	s	array:0.arguments
5	compile_commands.json	/^   "-c",$/;"	s	array:1.arguments
6	compile_commands.json	/^   "-o",$/;"	s	array:0.arguments
6	compile_commands.json	/^   "-o",$/;"	s	array:1.arguments
7	compile_commands.json	/^   "obj\/chip8.o",$/;"	s	array:1.arguments
7	compile_commands.json	/^   "obj\/main.o",$/;"	s	array:0.arguments
8	compile_commands.json	/^   "src\/chip8.c"$/;"	s	array:1.arguments
8	compile_commands.json	/^   "src\/main.c"$/;"	s	array:0.arguments
APP_BASE_NAME	deps/minifb/tests/android/gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_HOME	deps/minifb/tests/android/gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
Add per window data	deps/minifb/README.md	/^## Add per window data$/;"	s	chapter:Features:
Android (beta)	deps/minifb/README.md	/^## Android (beta)$/;"	s	chapter:Build instructions
AppDelegate	deps/minifb/tests/ios/AppDelegate.h	/^@interface AppDelegate : UIResponder <UIApplicationDelegate>$/;"	i	protocols:UIApplicationDelegate
AppDelegate	deps/minifb/tests/ios/AppDelegate.m	/^@interface AppDelegate ()$/;"	i	category:void	category:mfb_window	category:mfb_window	category:mfb_window
BGR	deps/minifb/src/gl/MiniFB_GL.c	/^#define BGR /;"	d	file:
BGRA	deps/minifb/src/gl/MiniFB_GL.c	/^#define BGRA /;"	d	file:
Build instructions	deps/minifb/README.md	/^# Build instructions$/;"	c
C++ event interface:	deps/minifb/README.md	/^### C++ event interface:$/;"	S	section:Features:""Callbacks to window events:
CC	Makefile	/^CC:=clang$/;"	m
CFLAGS	Makefile	/^CFLAGS:=-Wall -Iinclude $(foreach DEP,$(DEPS),$(shell pkg-config $(DEP) --cflags --shared)) $(fo/;"	m
CHIP8_FUNC	include/chip8.h	/^#define CHIP8_FUNC(/;"	d
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_add) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_add_index) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_add_reg) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_and) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_bcd) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_bulk_load) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_bulk_store) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_call) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_clear_scrn) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_draw) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_jmp) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_jmp_add) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_load) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_load_index) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_load_reg) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_load_sprite_addr) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_or) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_rand) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_ret) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_shl) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_shr) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_skip_eq) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_skip_eq_reg) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_skip_neq) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_skip_neq_reg) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_sub_reg) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_subn_reg) {$/;"	f
CHIP8_FUNC	src/chip8.c	/^CHIP8_FUNC(chip8_xor) {$/;"	f
CHIPS_CHIP8_H	include/chip8.h	/^#define CHIPS_CHIP8_H$/;"	d
CLASSPATH	deps/minifb/tests/android/gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CMAKE_BINARY_DIR	deps/minifb/Makefile	/^CMAKE_BINARY_DIR = \/home\/n3rdy\/dev\/c\/chips$/;"	m
CMAKE_BUILD_TYPE	deps/minifb/CMakeLists.txt	/^    set(CMAKE_BUILD_TYPE "Release")$/;"	v
CMAKE_COMMAND	deps/minifb/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_CONFIGURATION_TYPES	deps/minifb/CMakeLists.txt	/^set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE)$/;"	v
CMAKE_CROSSCOMPILING	deps/minifb/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX_EXTENSIONS	deps/minifb/CMakeLists.txt	/^set(CMAKE_CXX_EXTENSIONS OFF)$/;"	v
CMAKE_CXX_FLAGS	deps/minifb/CMakeLists.txt	/^    set(CMAKE_CXX_FLAGS "")$/;"	v
CMAKE_CXX_FLAGS_DEBUG	deps/minifb/CMakeLists.txt	/^    set(CMAKE_CXX_FLAGS_DEBUG "")$/;"	v
CMAKE_CXX_FLAGS_RELEASE	deps/minifb/CMakeLists.txt	/^    set(CMAKE_CXX_FLAGS_RELEASE "")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_STANDARD	deps/minifb/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD 11)$/;"	v
CMAKE_CXX_STANDARD_REQUIRED	deps/minifb/CMakeLists.txt	/^set(CMAKE_CXX_STANDARD_REQUIRED ON)$/;"	v
CMAKE_C_FLAGS	deps/minifb/CMakeLists.txt	/^    set(CMAKE_C_FLAGS "")$/;"	v
CMAKE_C_FLAGS_DEBUG	deps/minifb/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_DEBUG "" )$/;"	v
CMAKE_C_FLAGS_RELEASE	deps/minifb/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_RELEASE "")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	deps/minifb/CMakeFiles/hidpi.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	deps/minifb/CMakeFiles/input_events.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	deps/minifb/CMakeFiles/input_events_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	deps/minifb/CMakeFiles/minifb.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	deps/minifb/CMakeFiles/multiple_windows.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	deps/minifb/CMakeFiles/noise.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	deps/minifb/CMakeFiles/hidpi.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	deps/minifb/CMakeFiles/input_events.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	deps/minifb/CMakeFiles/input_events_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	deps/minifb/CMakeFiles/minifb.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	deps/minifb/CMakeFiles/multiple_windows.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	deps/minifb/CMakeFiles/noise.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_LANGUAGES	deps/minifb/CMakeFiles/hidpi.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	deps/minifb/CMakeFiles/input_events.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	deps/minifb/CMakeFiles/input_events_cpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	deps/minifb/CMakeFiles/minifb.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	deps/minifb/CMakeFiles/multiple_windows.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	deps/minifb/CMakeFiles/noise.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_FORCE_UNIX_PATHS	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_LINKED_INFO_FILES	deps/minifb/CMakeFiles/hidpi.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_Fortran_TARGET_LINKED_INFO_FILES	deps/minifb/CMakeFiles/input_events.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_Fortran_TARGET_LINKED_INFO_FILES	deps/minifb/CMakeFiles/input_events_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_Fortran_TARGET_LINKED_INFO_FILES	deps/minifb/CMakeFiles/minifb.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_Fortran_TARGET_LINKED_INFO_FILES	deps/minifb/CMakeFiles/multiple_windows.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_Fortran_TARGET_LINKED_INFO_FILES	deps/minifb/CMakeFiles/noise.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	deps/minifb/CMakeFiles/hidpi.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	deps/minifb/CMakeFiles/input_events.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	deps/minifb/CMakeFiles/input_events_cpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	deps/minifb/CMakeFiles/minifb.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	deps/minifb/CMakeFiles/multiple_windows.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	deps/minifb/CMakeFiles/noise.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_INSTALL_COMPONENT	deps/minifb/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	deps/minifb/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	deps/minifb/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Release")$/;"	v
CMAKE_INSTALL_PREFIX	deps/minifb/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	deps/minifb/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_OBJCXX_FLAGS	deps/minifb/CMakeLists.txt	/^    set(CMAKE_OBJCXX_FLAGS "")$/;"	v
CMAKE_OBJCXX_FLAGS_DEBUG	deps/minifb/CMakeLists.txt	/^    set(CMAKE_OBJCXX_FLAGS_DEBUG "")$/;"	v
CMAKE_OBJCXX_FLAGS_RELEASE	deps/minifb/CMakeLists.txt	/^    set(CMAKE_OBJCXX_FLAGS_RELEASE "")$/;"	v
CMAKE_OBJC_FLAGS	deps/minifb/CMakeLists.txt	/^    set(CMAKE_OBJC_FLAGS "")$/;"	v
CMAKE_OBJC_FLAGS_DEBUG	deps/minifb/CMakeLists.txt	/^    set(CMAKE_OBJC_FLAGS_DEBUG "")$/;"	v
CMAKE_OBJC_FLAGS_RELEASE	deps/minifb/CMakeLists.txt	/^    set(CMAKE_OBJC_FLAGS_RELEASE "")$/;"	v
CMAKE_OBJDUMP	deps/minifb/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OSX_DEPLOYMENT_TARGET	deps/minifb/CMakeLists.txt	/^        set(CMAKE_OSX_DEPLOYMENT_TARGET "11.0" CACHE STRING "Set CMake deployment target" ${FORC/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/n3rdy\/dev\/c\/chips")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	deps/minifb/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/n3rdy\/dev\/c\/chips")$/;"	v
CMAKE_SHARED_LINKER_FLAGS	deps/minifb/tests/android/app/src/main/cpp/CMakeLists.txt	/^set(CMAKE_SHARED_LINKER_FLAGS$/;"	v
CMAKE_SOURCE_DIR	deps/minifb/Makefile	/^CMAKE_SOURCE_DIR = \/home\/n3rdy\/dev\/c\/chips$/;"	m
CMD_LINE_ARGS	deps/minifb/tests/android/gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	deps/minifb/tests/android/gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
Callbacks to window events:	deps/minifb/README.md	/^## Callbacks to window events:$/;"	s	chapter:Features:
Coordinate system	deps/minifb/README.md	/^### Coordinate system$/;"	S	section:Build instructions""MacOS X
DEFAULT_JVM_OPTS	deps/minifb/tests/android/gradlew.bat	/^set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"$/;"	v
DEFS	Makefile	/^DEFS:=$/;"	m
DEPS	Makefile	/^DEPS:=sdl2$/;"	m
DIMEN_HIGH	deps/minifb/tests/hidpi.c	/^#define DIMEN_HIGH /;"	d	file:
DIMEN_LOW	deps/minifb/tests/hidpi.c	/^#define DIMEN_LOW /;"	d	file:
DIRNAME	deps/minifb/tests/android/gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	deps/minifb/tests/android/gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
EQUALS	deps/minifb/Makefile	/^EQUALS = =$/;"	m
Events	deps/minifb/tests/input_events_cpp.cpp	/^class Events {$/;"	c	file:
Features:	deps/minifb/README.md	/^# Features:$/;"	c
Get	deps/minifb/src/MiniFB_cpp.cpp	/^        mfb_stub *Get(struct mfb_window *window) {$/;"	f	struct:mfb_stub::GetInstance::stub_vector	typeref:typename:mfb_stub *	file:
Get information from windows (direct interface)	deps/minifb/README.md	/^## Get information from windows (direct interface)$/;"	s	chapter:Features:
GetErrorMessage	deps/minifb/src/windows/WinMiniFB.c	/^GetErrorMessage() {$/;"	f	typeref:typename:char *
GetInstance	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::GetInstance(struct mfb_window *window) {$/;"	f	class:mfb_stub	typeref:typename:mfb_stub *
GetSwapIntervalEXT	deps/minifb/src/gl/MiniFB_GL.c	/^PFNWGLGETSWAPINTERVALEXTPROC    GetSwapIntervalEXT = 0x0;$/;"	v	typeref:typename:PFNWGLGETSWAPINTERVALEXTPROC
HEIGHT	deps/minifb/tests/input_events.c	/^#define HEIGHT /;"	d	file:
HEIGHT	deps/minifb/tests/input_events_cpp.cpp	/^#define HEIGHT /;"	d	file:
HEIGHT_A	deps/minifb/tests/multiple_windows.c	/^#define HEIGHT_A /;"	d	file:
HEIGHT_B	deps/minifb/tests/multiple_windows.c	/^#define HEIGHT_B /;"	d	file:
HEX_SPRITES	src/chip8.c	/^static const uint8_t HEX_SPRITES[16][5] = {$/;"	v	typeref:typename:const uint8_t[16][5]	file:
How to add it to your project	deps/minifb/README.md	/^# How to add it to your project$/;"	c
IOS	deps/minifb/CMakeLists.txt	/^            set(IOS true)$/;"	v
JAVA_EXE	deps/minifb/tests/android/gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	deps/minifb/tests/android/gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_HOME	deps/minifb/tests/android/gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
KB_KEY_0	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_0             = 48,$/;"	e	enum:__anond56f22090303
KB_KEY_1	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_1             = 49,$/;"	e	enum:__anond56f22090303
KB_KEY_2	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_2             = 50,$/;"	e	enum:__anond56f22090303
KB_KEY_3	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_3             = 51,$/;"	e	enum:__anond56f22090303
KB_KEY_4	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_4             = 52,$/;"	e	enum:__anond56f22090303
KB_KEY_5	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_5             = 53,$/;"	e	enum:__anond56f22090303
KB_KEY_6	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_6             = 54,$/;"	e	enum:__anond56f22090303
KB_KEY_7	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_7             = 55,$/;"	e	enum:__anond56f22090303
KB_KEY_8	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_8             = 56,$/;"	e	enum:__anond56f22090303
KB_KEY_9	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_9             = 57,$/;"	e	enum:__anond56f22090303
KB_KEY_A	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_A             = 65,$/;"	e	enum:__anond56f22090303
KB_KEY_APOSTROPHE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_APOSTROPHE    = 39,$/;"	e	enum:__anond56f22090303
KB_KEY_B	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_B             = 66,$/;"	e	enum:__anond56f22090303
KB_KEY_BACKSLASH	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_BACKSLASH     = 92,$/;"	e	enum:__anond56f22090303
KB_KEY_BACKSPACE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_BACKSPACE     = 259,$/;"	e	enum:__anond56f22090303
KB_KEY_C	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_C             = 67,$/;"	e	enum:__anond56f22090303
KB_KEY_CAPS_LOCK	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_CAPS_LOCK     = 280,$/;"	e	enum:__anond56f22090303
KB_KEY_COMMA	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_COMMA         = 44,$/;"	e	enum:__anond56f22090303
KB_KEY_D	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_D             = 68,$/;"	e	enum:__anond56f22090303
KB_KEY_DELETE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_DELETE        = 261,$/;"	e	enum:__anond56f22090303
KB_KEY_DOWN	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_DOWN          = 264,$/;"	e	enum:__anond56f22090303
KB_KEY_E	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_E             = 69,$/;"	e	enum:__anond56f22090303
KB_KEY_END	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_END           = 269,$/;"	e	enum:__anond56f22090303
KB_KEY_ENTER	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_ENTER         = 257,$/;"	e	enum:__anond56f22090303
KB_KEY_EQUAL	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_EQUAL         = 61,$/;"	e	enum:__anond56f22090303
KB_KEY_ESCAPE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_ESCAPE        = 256,$/;"	e	enum:__anond56f22090303
KB_KEY_F	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F             = 70,$/;"	e	enum:__anond56f22090303
KB_KEY_F1	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F1            = 290,$/;"	e	enum:__anond56f22090303
KB_KEY_F10	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F10           = 299,$/;"	e	enum:__anond56f22090303
KB_KEY_F11	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F11           = 300,$/;"	e	enum:__anond56f22090303
KB_KEY_F12	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F12           = 301,$/;"	e	enum:__anond56f22090303
KB_KEY_F13	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F13           = 302,$/;"	e	enum:__anond56f22090303
KB_KEY_F14	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F14           = 303,$/;"	e	enum:__anond56f22090303
KB_KEY_F15	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F15           = 304,$/;"	e	enum:__anond56f22090303
KB_KEY_F16	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F16           = 305,$/;"	e	enum:__anond56f22090303
KB_KEY_F17	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F17           = 306,$/;"	e	enum:__anond56f22090303
KB_KEY_F18	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F18           = 307,$/;"	e	enum:__anond56f22090303
KB_KEY_F19	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F19           = 308,$/;"	e	enum:__anond56f22090303
KB_KEY_F2	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F2            = 291,$/;"	e	enum:__anond56f22090303
KB_KEY_F20	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F20           = 309,$/;"	e	enum:__anond56f22090303
KB_KEY_F21	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F21           = 310,$/;"	e	enum:__anond56f22090303
KB_KEY_F22	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F22           = 311,$/;"	e	enum:__anond56f22090303
KB_KEY_F23	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F23           = 312,$/;"	e	enum:__anond56f22090303
KB_KEY_F24	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F24           = 313,$/;"	e	enum:__anond56f22090303
KB_KEY_F25	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F25           = 314,$/;"	e	enum:__anond56f22090303
KB_KEY_F3	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F3            = 292,$/;"	e	enum:__anond56f22090303
KB_KEY_F4	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F4            = 293,$/;"	e	enum:__anond56f22090303
KB_KEY_F5	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F5            = 294,$/;"	e	enum:__anond56f22090303
KB_KEY_F6	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F6            = 295,$/;"	e	enum:__anond56f22090303
KB_KEY_F7	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F7            = 296,$/;"	e	enum:__anond56f22090303
KB_KEY_F8	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F8            = 297,$/;"	e	enum:__anond56f22090303
KB_KEY_F9	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_F9            = 298,$/;"	e	enum:__anond56f22090303
KB_KEY_G	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_G             = 71,$/;"	e	enum:__anond56f22090303
KB_KEY_GRAVE_ACCENT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_GRAVE_ACCENT  = 96,$/;"	e	enum:__anond56f22090303
KB_KEY_H	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_H             = 72,$/;"	e	enum:__anond56f22090303
KB_KEY_HOME	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_HOME          = 268,$/;"	e	enum:__anond56f22090303
KB_KEY_I	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_I             = 73,$/;"	e	enum:__anond56f22090303
KB_KEY_INSERT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_INSERT        = 260,$/;"	e	enum:__anond56f22090303
KB_KEY_J	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_J             = 74,$/;"	e	enum:__anond56f22090303
KB_KEY_K	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_K             = 75,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_0	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_0          = 320,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_1	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_1          = 321,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_2	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_2          = 322,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_3	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_3          = 323,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_4	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_4          = 324,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_5	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_5          = 325,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_6	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_6          = 326,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_7	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_7          = 327,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_8	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_8          = 328,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_9	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_9          = 329,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_ADD	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_ADD        = 334,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_DECIMAL	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_DECIMAL    = 330,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_DIVIDE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_DIVIDE     = 331,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_ENTER	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_ENTER      = 335,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_EQUAL	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_EQUAL      = 336,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_MULTIPLY	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_MULTIPLY   = 332,$/;"	e	enum:__anond56f22090303
KB_KEY_KP_SUBTRACT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_KP_SUBTRACT   = 333,$/;"	e	enum:__anond56f22090303
KB_KEY_L	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_L             = 76,$/;"	e	enum:__anond56f22090303
KB_KEY_LAST	deps/minifb/include/MiniFB_enums.h	/^#define KB_KEY_LAST /;"	d
KB_KEY_LEFT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_LEFT          = 263,$/;"	e	enum:__anond56f22090303
KB_KEY_LEFT_ALT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_LEFT_ALT      = 342,$/;"	e	enum:__anond56f22090303
KB_KEY_LEFT_BRACKET	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_LEFT_BRACKET  = 91,$/;"	e	enum:__anond56f22090303
KB_KEY_LEFT_CONTROL	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_LEFT_CONTROL  = 341,$/;"	e	enum:__anond56f22090303
KB_KEY_LEFT_SHIFT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_LEFT_SHIFT    = 340,$/;"	e	enum:__anond56f22090303
KB_KEY_LEFT_SUPER	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_LEFT_SUPER    = 343,$/;"	e	enum:__anond56f22090303
KB_KEY_M	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_M             = 77,$/;"	e	enum:__anond56f22090303
KB_KEY_MENU	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_MENU          = 348$/;"	e	enum:__anond56f22090303
KB_KEY_MINUS	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_MINUS         = 45,$/;"	e	enum:__anond56f22090303
KB_KEY_N	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_N             = 78,$/;"	e	enum:__anond56f22090303
KB_KEY_NUM_LOCK	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_NUM_LOCK      = 282,$/;"	e	enum:__anond56f22090303
KB_KEY_O	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_O             = 79,$/;"	e	enum:__anond56f22090303
KB_KEY_P	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_P             = 80,$/;"	e	enum:__anond56f22090303
KB_KEY_PAGE_DOWN	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_PAGE_DOWN     = 267,$/;"	e	enum:__anond56f22090303
KB_KEY_PAGE_UP	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_PAGE_UP       = 266,$/;"	e	enum:__anond56f22090303
KB_KEY_PAUSE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_PAUSE         = 284,$/;"	e	enum:__anond56f22090303
KB_KEY_PERIOD	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_PERIOD        = 46,$/;"	e	enum:__anond56f22090303
KB_KEY_PRINT_SCREEN	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_PRINT_SCREEN  = 283,$/;"	e	enum:__anond56f22090303
KB_KEY_Q	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_Q             = 81,$/;"	e	enum:__anond56f22090303
KB_KEY_R	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_R             = 82,$/;"	e	enum:__anond56f22090303
KB_KEY_RIGHT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_RIGHT         = 262,$/;"	e	enum:__anond56f22090303
KB_KEY_RIGHT_ALT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_RIGHT_ALT     = 346,$/;"	e	enum:__anond56f22090303
KB_KEY_RIGHT_BRACKET	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_RIGHT_BRACKET = 93,$/;"	e	enum:__anond56f22090303
KB_KEY_RIGHT_CONTROL	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_RIGHT_CONTROL = 345,$/;"	e	enum:__anond56f22090303
KB_KEY_RIGHT_SHIFT	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_RIGHT_SHIFT   = 344,$/;"	e	enum:__anond56f22090303
KB_KEY_RIGHT_SUPER	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_RIGHT_SUPER   = 347,$/;"	e	enum:__anond56f22090303
KB_KEY_S	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_S             = 83,$/;"	e	enum:__anond56f22090303
KB_KEY_SCROLL_LOCK	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_SCROLL_LOCK   = 281,$/;"	e	enum:__anond56f22090303
KB_KEY_SEMICOLON	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_SEMICOLON     = 59,$/;"	e	enum:__anond56f22090303
KB_KEY_SLASH	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_SLASH         = 47,$/;"	e	enum:__anond56f22090303
KB_KEY_SPACE	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_SPACE         = 32,$/;"	e	enum:__anond56f22090303
KB_KEY_T	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_T             = 84,$/;"	e	enum:__anond56f22090303
KB_KEY_TAB	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_TAB           = 258,$/;"	e	enum:__anond56f22090303
KB_KEY_U	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_U             = 85,$/;"	e	enum:__anond56f22090303
KB_KEY_UNKNOWN	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_UNKNOWN       = -1,$/;"	e	enum:__anond56f22090303
KB_KEY_UP	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_UP            = 265,$/;"	e	enum:__anond56f22090303
KB_KEY_V	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_V             = 86,$/;"	e	enum:__anond56f22090303
KB_KEY_W	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_W             = 87,$/;"	e	enum:__anond56f22090303
KB_KEY_WORLD_1	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_WORLD_1       = 161,$/;"	e	enum:__anond56f22090303
KB_KEY_WORLD_2	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_WORLD_2       = 162,$/;"	e	enum:__anond56f22090303
KB_KEY_X	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_X             = 88,$/;"	e	enum:__anond56f22090303
KB_KEY_Y	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_Y             = 89,$/;"	e	enum:__anond56f22090303
KB_KEY_Z	deps/minifb/include/MiniFB_enums.h	/^    KB_KEY_Z             = 90,$/;"	e	enum:__anond56f22090303
KB_MOD_ALT	deps/minifb/include/MiniFB_enums.h	/^    KB_MOD_ALT          = 0x0004,$/;"	e	enum:__anond56f22090403
KB_MOD_CAPS_LOCK	deps/minifb/include/MiniFB_enums.h	/^    KB_MOD_CAPS_LOCK    = 0x0010,$/;"	e	enum:__anond56f22090403
KB_MOD_CONTROL	deps/minifb/include/MiniFB_enums.h	/^    KB_MOD_CONTROL      = 0x0002,$/;"	e	enum:__anond56f22090403
KB_MOD_NUM_LOCK	deps/minifb/include/MiniFB_enums.h	/^    KB_MOD_NUM_LOCK     = 0x0020$/;"	e	enum:__anond56f22090403
KB_MOD_SHIFT	deps/minifb/include/MiniFB_enums.h	/^    KB_MOD_SHIFT        = 0x0001,$/;"	e	enum:__anond56f22090403
KB_MOD_SUPER	deps/minifb/include/MiniFB_enums.h	/^    KB_MOD_SUPER        = 0x0008,$/;"	e	enum:__anond56f22090403
KILL	deps/minifb/src/wayland/WaylandMiniFB.c	/^#define KILL(/;"	d	file:
LINK	Makefile	/^LINK := $(foreach DEP,$(DEPS),$(shell pkg-config $(DEP) --libs --shared)) -lm$/;"	m
LOGD	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOGD(/;"	d	file:
LOGD	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOGD(/;"	d	file:
LOGE	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOGE(/;"	d	file:
LOGE	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOGE(/;"	d	file:
LOGF	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOGF(/;"	d	file:
LOGF	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOGF(/;"	d	file:
LOGI	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOGI(/;"	d	file:
LOGI	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOGI(/;"	d	file:
LOGV	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOGV(/;"	d	file:
LOGV	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOGV(/;"	d	file:
LOGW	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOGW(/;"	d	file:
LOGW	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOGW(/;"	d	file:
LOG_TAG	deps/minifb/src/android/AndroidMiniFB.c	/^#define  LOG_TAG /;"	d	file:
LOG_TAG	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define  LOG_TAG /;"	d	file:
MAX	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define MAX(/;"	d	file:
MFB_RGB	deps/minifb/include/MiniFB.h	/^#define MFB_RGB(/;"	d
MIN	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define MIN(/;"	d	file:
MINIFB_AVOID_CPP_HEADERS	deps/minifb/CMakeLists.txt	/^option(MINIFB_AVOID_CPP_HEADERS "Avoid including C++ Headers" FALSE)$/;"	D
MINIFB_BUILD_EXAMPLES	deps/minifb/CMakeLists.txt	/^option(MINIFB_BUILD_EXAMPLES "Build minifb example programs" TRUE)$/;"	D
MOUSE_BTN_0	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_0, \/\/ No mouse button$/;"	e	enum:__anond56f22090203
MOUSE_BTN_1	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_1,$/;"	e	enum:__anond56f22090203
MOUSE_BTN_2	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_2,$/;"	e	enum:__anond56f22090203
MOUSE_BTN_3	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_3,$/;"	e	enum:__anond56f22090203
MOUSE_BTN_4	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_4,$/;"	e	enum:__anond56f22090203
MOUSE_BTN_5	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_5,$/;"	e	enum:__anond56f22090203
MOUSE_BTN_6	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_6,$/;"	e	enum:__anond56f22090203
MOUSE_BTN_7	deps/minifb/include/MiniFB_enums.h	/^    MOUSE_BTN_7,$/;"	e	enum:__anond56f22090203
MOUSE_LEFT	deps/minifb/include/MiniFB_enums.h	/^#define MOUSE_LEFT /;"	d
MOUSE_MIDDLE	deps/minifb/include/MiniFB_enums.h	/^#define MOUSE_MIDDLE /;"	d
MOUSE_RIGHT	deps/minifb/include/MiniFB_enums.h	/^#define MOUSE_RIGHT /;"	d
MacOS X	deps/minifb/README.md	/^## MacOS X$/;"	s	chapter:Build instructions
MiniFB	deps/minifb/README.md	/^# MiniFB$/;"	c
OBJ	Makefile	/^OBJ:=$(patsubst src\/%.c, obj\/%.o, $(SRC))$/;"	m
OSXView	deps/minifb/src/macosx/OSXView.h	/^@interface OSXView : NSView<NSTextInputClient>$/;"	i	protocols:NSTextInputClient
OSXView	deps/minifb/src/macosx/OSXView.m	/^@implementation OSXView$/;"	I	category:USE_METAL_API
OSXViewDelegate	deps/minifb/src/macosx/OSXViewDelegate.h	/^@interface OSXViewDelegate : NSViewController<MTKViewDelegate>$/;"	i	protocols:MTKViewDelegate
OSXViewDelegate	deps/minifb/src/macosx/OSXViewDelegate.m	/^@implementation OSXViewDelegate$/;"	I
OSXWindow	deps/minifb/src/macosx/OSXWindow.h	/^@interface OSXWindow : NSWindow<NSWindowDelegate>$/;"	i	protocols:NSWindowDelegate
OSXWindow	deps/minifb/src/macosx/OSXWindow.m	/^@implementation OSXWindow$/;"	I
OUT	Makefile	/^OUT:=bin\/$(PROJ)$/;"	m
OnUpdateFrame	deps/minifb/tests/ios/AppDelegate.h	/^- (void) OnUpdateFrame;$/;"	m	interface:AppDelegate
OnUpdateFrame	deps/minifb/tests/ios/AppDelegate.m	/^- (void) OnUpdateFrame {$/;"	m	interface:AppDelegate	category:mfb_window
OpenGL API backend	deps/minifb/README.md	/^### OpenGL API backend$/;"	S	section:Build instructions""Windows
OpenGL API backend	deps/minifb/README.md	/^### OpenGL API backend$/;"	S	section:Build instructions""X11 (FreeBSD, Linux, *nix)
PFNGLXSWAPINTERVALEXTPROC	deps/minifb/src/gl/MiniFB_GL.c	/^typedef void (*PFNGLXSWAPINTERVALEXTPROC)(Display*,GLXDrawable,int);$/;"	t	typeref:typename:void (*)(Display *,GLXDrawable,int)	file:
PFNWGLGETSWAPINTERVALEXTPROC	deps/minifb/src/gl/MiniFB_GL.c	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC)(void);$/;"	t	typeref:typename:int (WINAPI *)(void)	file:
PFNWGLSWAPINTERVALEXTPROC	deps/minifb/src/gl/MiniFB_GL.c	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC)(int);$/;"	t	typeref:typename:BOOL (WINAPI *)(int)	file:
PFN_EnableNonClientDpiScaling	deps/minifb/src/windows/WinMiniFB.c	/^typedef BOOL(WINAPI *PFN_EnableNonClientDpiScaling)(HWND);$/;"	t	typeref:typename:BOOL (WINAPI *)(HWND)	file:
PFN_GetDpiForMonitor	deps/minifb/src/windows/WinMiniFB.c	/^typedef HRESULT(WINAPI *PFN_GetDpiForMonitor)(HMONITOR, mfb_MONITOR_DPI_TYPE, UINT *, UINT *);$/;"	t	typeref:typename:HRESULT (WINAPI *)(HMONITOR,mfb_MONITOR_DPI_TYPE,UINT *,UINT *)	file:
PFN_GetDpiForWindow	deps/minifb/src/windows/WinMiniFB.c	/^typedef UINT(WINAPI *PFN_GetDpiForWindow)(HWND);$/;"	t	typeref:typename:UINT (WINAPI *)(HWND)	file:
PFN_SetProcessDPIAware	deps/minifb/src/windows/WinMiniFB.c	/^typedef BOOL(WINAPI *PFN_SetProcessDPIAware)(void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)	file:
PFN_SetProcessDpiAwareness	deps/minifb/src/windows/WinMiniFB.c	/^typedef HRESULT(WINAPI *PFN_SetProcessDpiAwareness)(mfb_PROCESS_DPI_AWARENESS);$/;"	t	typeref:typename:HRESULT (WINAPI *)(mfb_PROCESS_DPI_AWARENESS)	file:
PFN_SetProcessDpiAwarenessContext	deps/minifb/src/windows/WinMiniFB.c	/^typedef BOOL(WINAPI *PFN_SetProcessDpiAwarenessContext)(HANDLE);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE)	file:
PROJ	Makefile	/^PROJ:=chips$/;"	m
PROJECT_NAME	deps/minifb/CMakeLists.txt	/^set(PROJECT_NAME MiniFB)$/;"	v
Pos	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^} Pos;$/;"	t	typeref:struct:__anon3dcd00920108	file:
RGB	deps/minifb/src/gl/MiniFB_GL.c	/^#define RGB /;"	d	file:
RGBA	deps/minifb/src/gl/MiniFB_GL.c	/^#define RGBA /;"	d	file:
RM	deps/minifb/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
SHELL	deps/minifb/Makefile	/^SHELL = \/bin\/sh$/;"	m
SRC	Makefile	/^SRC:=$(wildcard src\/*.c)$/;"	m
STATE_EXIT	deps/minifb/include/MiniFB_enums.h	/^    STATE_EXIT           = -1,$/;"	e	enum:__anond56f22090103
STATE_INTERNAL_ERROR	deps/minifb/include/MiniFB_enums.h	/^    STATE_INTERNAL_ERROR = -4,$/;"	e	enum:__anond56f22090103
STATE_INVALID_BUFFER	deps/minifb/include/MiniFB_enums.h	/^    STATE_INVALID_BUFFER = -3,$/;"	e	enum:__anond56f22090103
STATE_INVALID_WINDOW	deps/minifb/include/MiniFB_enums.h	/^    STATE_INVALID_WINDOW = -2,$/;"	e	enum:__anond56f22090103
STATE_OK	deps/minifb/include/MiniFB_enums.h	/^    STATE_OK             =  0,$/;"	e	enum:__anond56f22090103
SWindowData	deps/minifb/src/WindowData.h	/^} SWindowData;$/;"	t	typeref:struct:__anon9fa120630108
SWindowData_Android	deps/minifb/src/android/WindowData_Android.h	/^} SWindowData_Android;$/;"	t	typeref:struct:__anon776e3c130108
SWindowData_IOS	deps/minifb/src/ios/WindowData_IOS.h	/^} SWindowData_IOS;$/;"	t	typeref:struct:__anon6423c6e70108
SWindowData_OSX	deps/minifb/src/macosx/WindowData_OSX.h	/^} SWindowData_OSX;$/;"	t	typeref:struct:__anoncaa6ffd60108
SWindowData_Way	deps/minifb/src/wayland/WindowData_Way.h	/^} SWindowData_Way;$/;"	t	typeref:struct:__anon44bf58f20108
SWindowData_Win	deps/minifb/src/windows/WindowData_Win.h	/^} SWindowData_Win;$/;"	t	typeref:struct:__anon65bf9bca0108
SWindowData_X11	deps/minifb/src/x11/WindowData_X11.h	/^} SWindowData_X11;$/;"	t	typeref:struct:__anon24d459e50108
SrcGL	deps/minifb/CMakeLists.txt	/^set(SrcGL$/;"	v
SrcIOS	deps/minifb/CMakeLists.txt	/^set(SrcIOS$/;"	v
SrcLib	deps/minifb/CMakeLists.txt	/^set(SrcLib$/;"	v
SrcMacOSX	deps/minifb/CMakeLists.txt	/^set(SrcMacOSX$/;"	v
SrcWayland	deps/minifb/CMakeLists.txt	/^set(SrcWayland$/;"	v
SrcWindows	deps/minifb/CMakeLists.txt	/^set(SrcWindows$/;"	v
SrcX11	deps/minifb/CMakeLists.txt	/^set(SrcX11$/;"	v
StyleHints	deps/minifb/src/x11/X11MiniFB.c	/^        struct StyleHints {$/;"	s	function:mfb_open_ex	file:
Supported Platforms:	deps/minifb/README.md	/^# Supported Platforms:$/;"	c
SwapIntervalEXT	deps/minifb/src/gl/MiniFB_GL.c	/^PFNGLXSWAPINTERVALEXTPROC   SwapIntervalEXT = 0x0;$/;"	v	typeref:typename:PFNGLXSWAPINTERVALEXTPROC
SwapIntervalEXT	deps/minifb/src/gl/MiniFB_GL.c	/^PFNWGLSWAPINTERVALEXTPROC       SwapIntervalEXT    = 0x0;$/;"	v	typeref:typename:PFNWGLSWAPINTERVALEXTPROC
TEXTURE0	deps/minifb/src/gl/MiniFB_GL.c	/^#define TEXTURE0 /;"	d	file:
Timers and target FPS	deps/minifb/README.md	/^## Timers and target FPS$/;"	s	chapter:Features:
USE_INVERTED_Y_ON_MACOS	deps/minifb/CMakeLists.txt	/^    option(USE_INVERTED_Y_ON_MACOS "Use default mouse position: (0, 0) at (left, down)" OFF)$/;"	D
USE_METAL_API	deps/minifb/CMakeLists.txt	/^    option(USE_METAL_API "Build the project using metal API code" ON)$/;"	D
USE_METAL_API	deps/minifb/src/macosx/OSXView.m	/^#if defined(USE_METAL_API)$/;"	C	implementation:OSXView
USE_OPENGL_API	deps/minifb/CMakeLists.txt	/^        option(USE_OPENGL_API "Build the project using OpenGL API code" ON)$/;"	D
USE_OPENGL_API	deps/minifb/CMakeLists.txt	/^    option(USE_OPENGL_API "Build the project using OpenGL API code" ON)$/;"	D
USE_WAYLAND_API	deps/minifb/CMakeLists.txt	/^    option(USE_WAYLAND_API "Build the project using wayland API code" OFF)$/;"	D
UseCleanUp	deps/minifb/src/gl/MiniFB_GL.c	/^    #define UseCleanUp(/;"	d	file:
Vertex	deps/minifb/src/ios/WindowData_IOS.h	/^typedef struct Vertex {$/;"	s
Vertex	deps/minifb/src/ios/WindowData_IOS.h	/^} Vertex;$/;"	t	typeref:struct:Vertex
Vertex	deps/minifb/src/macosx/WindowData_OSX.h	/^typedef struct Vertex {$/;"	s
Vertex	deps/minifb/src/macosx/WindowData_OSX.h	/^} Vertex;$/;"	t	typeref:struct:Vertex
WF_ALWAYS_ON_TOP	deps/minifb/include/MiniFB_enums.h	/^    WF_ALWAYS_ON_TOP      = 0x10,$/;"	e	enum:__anond56f22090503
WF_BORDERLESS	deps/minifb/include/MiniFB_enums.h	/^    WF_BORDERLESS         = 0x08,$/;"	e	enum:__anond56f22090503
WF_FULLSCREEN	deps/minifb/include/MiniFB_enums.h	/^    WF_FULLSCREEN         = 0x02,$/;"	e	enum:__anond56f22090503
WF_FULLSCREEN_DESKTOP	deps/minifb/include/MiniFB_enums.h	/^    WF_FULLSCREEN_DESKTOP = 0x04,$/;"	e	enum:__anond56f22090503
WF_RESIZABLE	deps/minifb/include/MiniFB_enums.h	/^    WF_RESIZABLE          = 0x01,$/;"	e	enum:__anond56f22090503
WIDTH	deps/minifb/tests/input_events.c	/^#define WIDTH /;"	d	file:
WIDTH	deps/minifb/tests/input_events_cpp.cpp	/^#define WIDTH /;"	d	file:
WIDTH_A	deps/minifb/tests/multiple_windows.c	/^#define WIDTH_A /;"	d	file:
WIDTH_B	deps/minifb/tests/multiple_windows.c	/^#define WIDTH_B /;"	d	file:
WIN_HEIGHT	src/main.c	/^#define WIN_HEIGHT	/;"	d	file:
WIN_MULTIPLIER	src/main.c	/^#define WIN_MULTIPLIER	/;"	d	file:
WIN_WIDTH	src/main.c	/^#define WIN_WIDTH	/;"	d	file:
Wayland (Linux)	deps/minifb/README.md	/^## Wayland (Linux)$/;"	s	chapter:Build instructions
Windows	deps/minifb/README.md	/^## Windows$/;"	s	chapter:Build instructions
WndProc	deps/minifb/src/windows/WinMiniFB.c	/^WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	typeref:typename:LRESULT CALLBACK
X11 (FreeBSD, Linux, *nix)	deps/minifb/README.md	/^## X11 (FreeBSD, Linux, *nix)$/;"	s	chapter:Build instructions
_MINIFB_H_	deps/minifb/include/MiniFB.h	/^#define _MINIFB_H_$/;"	d
_SKIP	deps/minifb/tests/android/gradlew.bat	/^set _SKIP=2$/;"	v
_USE_MATH_DEFINES	deps/minifb/tests/multiple_windows.c	/^#define _USE_MATH_DEFINES$/;"	d	file:
__anon18742f7d0102	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_active_callback([](struct mfb_window *window, bool isActive) {$/;"	f	function:main	file:
__anon18742f7d0202	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_resize_callback([](struct mfb_window *window, int width, int height) {$/;"	f	function:main	file:
__anon18742f7d0302	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_close_callback([](struct mfb_window *window) {$/;"	f	function:main	file:
__anon18742f7d0402	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_keyboard_callback([](struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool i/;"	f	function:main	file:
__anon18742f7d0502	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_char_input_callback([](struct mfb_window *window, unsigned int charCode) {$/;"	f	function:main	file:
__anon18742f7d0602	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_mouse_button_callback([](struct mfb_window *window, mfb_mouse_button button, mfb_key/;"	f	function:main	file:
__anon18742f7d0702	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_mouse_move_callback([](struct mfb_window *window, int x, int y) {$/;"	f	function:main	file:
__anon18742f7d0802	deps/minifb/tests/input_events_cpp.cpp	/^    mfb_set_mouse_scroll_callback([](struct mfb_window *window, mfb_key_mod mod, float deltaX, f/;"	f	function:main	file:
__anon24d459e50108	deps/minifb/src/x11/WindowData_X11.h	/^typedef struct {$/;"	s
__anon3dcd00920108	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^typedef struct {$/;"	s	file:
__anon44bf58f20108	deps/minifb/src/wayland/WindowData_Way.h	/^{$/;"	s
__anon6423c6e70108	deps/minifb/src/ios/WindowData_IOS.h	/^typedef struct {$/;"	s
__anon65bf9bca0108	deps/minifb/src/windows/WindowData_Win.h	/^typedef struct {$/;"	s
__anon776e3c130108	deps/minifb/src/android/WindowData_Android.h	/^typedef struct {$/;"	s
__anon9fa120630108	deps/minifb/src/WindowData.h	/^typedef struct {$/;"	s
__anoncaa6ffd60108	deps/minifb/src/macosx/WindowData_OSX.h	/^typedef struct {$/;"	s
__anoncaa6ffd60208	deps/minifb/src/macosx/WindowData_OSX.h	/^    struct {$/;"	s	struct:__anoncaa6ffd60108
__anond56f22090103	deps/minifb/include/MiniFB_enums.h	/^typedef enum {$/;"	g
__anond56f22090203	deps/minifb/include/MiniFB_enums.h	/^typedef enum {$/;"	g
__anond56f22090303	deps/minifb/include/MiniFB_enums.h	/^typedef enum {$/;"	g
__anond56f22090403	deps/minifb/include/MiniFB_enums.h	/^typedef enum {$/;"	g
__anond56f22090503	deps/minifb/include/MiniFB_enums.h	/^typedef enum {$/;"	g
_createAssets	deps/minifb/src/ios/iOSViewDelegate.m	/^- (void) _createAssets {$/;"	m	implementation:iOSViewDelegate
_createAssets	deps/minifb/src/macosx/OSXViewDelegate.m	/^- (void) _createAssets {$/;"	m	implementation:OSXViewDelegate
_createShaders	deps/minifb/src/ios/iOSViewDelegate.m	/^- (bool) _createShaders {$/;"	m	implementation:iOSViewDelegate
_createShaders	deps/minifb/src/macosx/OSXViewDelegate.m	/^- (bool) _createShaders {$/;"	m	implementation:OSXViewDelegate
acceptsFirstMouse:	deps/minifb/src/macosx/OSXView.m	/^- (BOOL)acceptsFirstMouse:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
acceptsFirstResponder	deps/minifb/src/macosx/OSXView.m	/^- (BOOL)acceptsFirstResponder {$/;"	m	implementation:OSXView	category:USE_METAL_API
active	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^active(struct mfb_window *window, bool isActive) {$/;"	f	typeref:typename:void
active	deps/minifb/tests/input_events.c	/^active(struct mfb_window *window, bool isActive) {$/;"	f	typeref:typename:void	file:
active	deps/minifb/tests/input_events_cpp.cpp	/^    void active(struct mfb_window *window, bool isActive) {$/;"	f	class:Events	typeref:typename:void	file:
active	deps/minifb/tests/multiple_windows.c	/^active(struct mfb_window *window, bool isActive) {$/;"	f	typeref:typename:void
active_func	deps/minifb/src/WindowData.h	/^    mfb_active_func         active_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_active_func
active_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::active_stub(struct mfb_window *window, bool isActive) {$/;"	f	class:mfb_stub	typeref:typename:void
all	Makefile	/^all: $(OUT) # test$/;"	t
all	deps/minifb/Makefile	/^all: cmake_check_build_system$/;"	t
android	deps/minifb/tests/android/app/src/main/AndroidManifest.xml	/^          android:versionName="1.0">$/;"	n	uri:http://schemas.android.com/apk/res/android
android_main	deps/minifb/src/android/AndroidMiniFB.c	/^android_main(struct android_app* app) {$/;"	f	typeref:typename:void
app	deps/minifb/src/android/WindowData_Android.h	/^    struct android_app  *app;$/;"	m	struct:__anon776e3c130108	typeref:struct:android_app *
application:didFinishLaunchingWithOptions:	deps/minifb/tests/ios/AppDelegate.m	/^- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)l/;"	m	interface:AppDelegate	category:mfb_window
applicationDidBecomeActive:	deps/minifb/tests/ios/AppDelegate.m	/^- (void)applicationDidBecomeActive:(UIApplication *)application {$/;"	m	interface:AppDelegate	category:mfb_window
applicationDidEnterBackground:	deps/minifb/tests/ios/AppDelegate.m	/^- (void)applicationDidEnterBackground:(UIApplication *)application {$/;"	m	interface:AppDelegate	category:mfb_window
applicationWillEnterForeground:	deps/minifb/tests/ios/AppDelegate.m	/^- (void)applicationWillEnterForeground:(UIApplication *)application {$/;"	m	interface:AppDelegate	category:mfb_window
applicationWillResignActive:	deps/minifb/tests/ios/AppDelegate.m	/^- (void) applicationWillResignActive:(UIApplication *)application {$/;"	m	interface:AppDelegate	category:mfb_window
applicationWillTerminate:	deps/minifb/tests/ios/AppDelegate.m	/^- (void)applicationWillTerminate:(UIApplication *)application {$/;"	m	interface:AppDelegate	category:mfb_window
arguments	compile_commands.json	/^  "arguments": [$/;"	a	object:0
arguments	compile_commands.json	/^  "arguments": [$/;"	a	object:1
attributedSubstringForProposedRange:actualRange:	deps/minifb/src/macosx/OSXView.m	/^- (nullable NSAttributedString *)attributedSubstringForProposedRange:(NSRange)range actualRange:/;"	m	implementation:OSXView	category:USE_METAL_API
axis_discrete	deps/minifb/src/wayland/WaylandMiniFB.c	/^axis_discrete(void *data, struct wl_pointer *pointer, uint32_t axis, int32_t discrete) {$/;"	f	typeref:typename:void	file:
axis_source	deps/minifb/src/wayland/WaylandMiniFB.c	/^axis_source(void *data, struct wl_pointer *pointer, uint32_t axis_source) {$/;"	f	typeref:typename:void	file:
axis_stop	deps/minifb/src/wayland/WaylandMiniFB.c	/^axis_stop(void *data, struct wl_pointer *pointer, uint32_t time, uint32_t axis) {$/;"	f	typeref:typename:void	file:
bitmapInfo	deps/minifb/src/windows/WindowData_Win.h	/^    BITMAPINFO          *bitmapInfo;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:BITMAPINFO *
buffer_height	deps/minifb/src/WindowData.h	/^    uint32_t                buffer_height;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
buffer_stride	deps/minifb/src/WindowData.h	/^    uint32_t                buffer_stride;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
buffer_width	deps/minifb/src/WindowData.h	/^    uint32_t                buffer_width;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
calc_dst_factor	deps/minifb/src/MiniFB_internal.c	/^calc_dst_factor(SWindowData *window_data, uint32_t width, uint32_t height) {$/;"	f	typeref:typename:void
canBecomeFirstResponder	deps/minifb/src/ios/iOSView.m	/^- (BOOL) canBecomeFirstResponder {$/;"	m	implementation:iOSView
canBecomeKeyView	deps/minifb/src/macosx/OSXView.m	/^- (BOOL)canBecomeKeyView {$/;"	m	implementation:OSXView	category:USE_METAL_API
canBecomeKeyWindow	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
canBecomeMainWindow	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
char_input	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^char_input(struct mfb_window *window, unsigned int charCode) {$/;"	f	typeref:typename:void
char_input	deps/minifb/tests/input_events.c	/^char_input(struct mfb_window *window, unsigned int charCode) {$/;"	f	typeref:typename:void	file:
char_input	deps/minifb/tests/input_events_cpp.cpp	/^    void char_input(struct mfb_window *window, unsigned int charCode) {$/;"	f	class:Events	typeref:typename:void	file:
char_input	deps/minifb/tests/multiple_windows.c	/^char_input(struct mfb_window *window, unsigned int charCode) {$/;"	f	typeref:typename:void
char_input_func	deps/minifb/src/WindowData.h	/^    mfb_char_input_func     char_input_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_char_input_func
char_input_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::char_input_stub(struct mfb_window *window, unsigned int code) {$/;"	f	class:mfb_stub	typeref:typename:void
characterIndexForPoint:	deps/minifb/src/macosx/OSXView.m	/^- (NSUInteger)characterIndexForPoint:(NSPoint)point {$/;"	m	implementation:OSXView	category:USE_METAL_API
childContentView	deps/minifb/src/macosx/OSXWindow.h	/^    NSView              *childContentView;$/;"	E	interface:OSXWindow
chip8	include/chip8.h	/^struct chip8 {$/;"	s
chip8_init	src/chip8.c	/^int chip8_init (struct chip8 *chip) {$/;"	f	typeref:typename:int
chip8_load_instr	src/chip8.c	/^inline static uint16_t chip8_load_instr(struct chip8 *chip) {$/;"	f	typeref:typename:uint16_t	file:
chip8_load_rom	src/chip8.c	/^int chip8_load_rom (struct chip8 *chip, const char *fname) {$/;"	f	typeref:typename:int
chip8_pixbuf_to_surf	src/chip8.c	/^static void chip8_pixbuf_to_surf(uint64_t *pixbuf, SDL_Surface *surf) {$/;"	f	typeref:typename:void	file:
chip8_stack_pop	src/chip8.c	/^static uint16_t chip8_stack_pop(struct chip8 *chip) {$/;"	f	typeref:typename:uint16_t	file:
chip8_stack_push	src/chip8.c	/^static int chip8_stack_push(struct chip8 *chip, uint16_t addr) {$/;"	f	typeref:typename:int	file:
chip8_tick	src/chip8.c	/^int chip8_tick(struct chip8 *chip) {$/;"	f	typeref:typename:int
clean	Makefile	/^clean:$/;"	t
clean	deps/minifb/Makefile	/^clean:$/;"	t
clean/fast	deps/minifb/Makefile	/^clean\/fast: clean$/;"	t
close	deps/minifb/src/WindowData.h	/^    bool                    close;$/;"	m	struct:__anon9fa120630108	typeref:typename:bool
close	deps/minifb/tests/input_events.c	/^close(struct mfb_window *window) {$/;"	f	typeref:typename:bool	file:
close	deps/minifb/tests/input_events_cpp.cpp	/^    bool close(struct mfb_window *window) {$/;"	f	class:Events	typeref:typename:bool	file:
close_func	deps/minifb/src/WindowData.h	/^    mfb_close_func          close_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_close_func
close_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::close_stub(struct mfb_window *window) {$/;"	f	class:mfb_stub	typeref:typename:bool
cmake_check_build_system	deps/minifb/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	deps/minifb/Makefile	/^cmake_force:$/;"	t
command_queue	deps/minifb/src/macosx/OSXViewDelegate.h	/^    id<MTLCommandQueue>         command_queue;$/;"	E	interface:OSXViewDelegate
compositor	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_compositor    *compositor;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_compositor *
contentRectForFrameRect:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
contentView	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
context	deps/minifb/src/x11/WindowData_X11.h	/^    GLXContext          context;$/;"	m	struct:__anon24d459e50108	typeref:typename:GLXContext
create_GL_context	deps/minifb/src/gl/MiniFB_GL.c	/^create_GL_context(SWindowData *window_data) {$/;"	f	typeref:typename:bool
create_window_data	deps/minifb/src/ios/iOSMiniFB.m	/^create_window_data(unsigned width, unsigned height) {$/;"	f
create_window_data	deps/minifb/src/macosx/MacMiniFB.m	/^create_window_data(unsigned width, unsigned height) {$/;"	f
current_buffer	deps/minifb/src/macosx/OSXViewDelegate.h	/^    int                         current_buffer;$/;"	E	interface:OSXViewDelegate
cursor_surface	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_surface       *cursor_surface;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_surface *
cursor_theme	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_cursor_theme  *cursor_theme;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_cursor_theme *
dealloc	deps/minifb/src/macosx/OSXView.m	/^- (void)dealloc {$/;"	m	implementation:OSXView	category:USE_METAL_API
dealloc	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
debug	include/chip8.h	/^	char debug;$/;"	m	struct:chip8	typeref:typename:char
decorations	deps/minifb/src/x11/X11MiniFB.c	/^            unsigned long   decorations;$/;"	m	struct:mfb_open_ex::StyleHints	typeref:typename:unsigned long	file:
default_cursor	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_cursor        *default_cursor;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_cursor *
default_target	deps/minifb/Makefile	/^default_target: all$/;"	t
delta_counter	deps/minifb/src/MiniFB_internal.h	/^    int64_t     delta_counter;$/;"	m	struct:mfb_timer	typeref:typename:int64_t
depend	deps/minifb/Makefile	/^depend:$/;"	t
deps/minifb/CMakeFiles/hidpi.dir/rule	deps/minifb/Makefile	/^deps\/minifb\/CMakeFiles\/hidpi.dir\/rule:$/;"	t
deps/minifb/CMakeFiles/input_events.dir/rule	deps/minifb/Makefile	/^deps\/minifb\/CMakeFiles\/input_events.dir\/rule:$/;"	t
deps/minifb/CMakeFiles/input_events_cpp.dir/rule	deps/minifb/Makefile	/^deps\/minifb\/CMakeFiles\/input_events_cpp.dir\/rule:$/;"	t
deps/minifb/CMakeFiles/minifb.dir/rule	deps/minifb/Makefile	/^deps\/minifb\/CMakeFiles\/minifb.dir\/rule:$/;"	t
deps/minifb/CMakeFiles/multiple_windows.dir/rule	deps/minifb/Makefile	/^deps\/minifb\/CMakeFiles\/multiple_windows.dir\/rule:$/;"	t
deps/minifb/CMakeFiles/noise.dir/rule	deps/minifb/Makefile	/^deps\/minifb\/CMakeFiles\/noise.dir\/rule:$/;"	t
destroy	deps/minifb/src/wayland/WaylandMiniFB.c	/^destroy(SWindowData *window_data)$/;"	f	typeref:typename:void	file:
destroy_GL_context	deps/minifb/src/gl/MiniFB_GL.c	/^destroy_GL_context(SWindowData *window_data) {$/;"	f	typeref:typename:void
destroy_window_data	deps/minifb/src/ios/iOSMiniFB.m	/^destroy_window_data(SWindowData *window_data) {$/;"	f
destroy_window_data	deps/minifb/src/macosx/MacMiniFB.m	/^destroy_window_data(SWindowData *window_data) {$/;"	f
destroy_window_data	deps/minifb/src/wayland/WaylandMiniFB.c	/^destroy_window_data(SWindowData *window_data)$/;"	f	typeref:typename:void	file:
destroy_window_data	deps/minifb/src/windows/WinMiniFB.c	/^destroy_window_data(SWindowData *window_data) {$/;"	f	typeref:typename:void
destroy_window_data	deps/minifb/src/x11/X11MiniFB.c	/^destroy_window_data(SWindowData *window_data)  {$/;"	f	typeref:typename:void
die	deps/minifb/tests/android/gradlew	/^die () {$/;"	f
directory	compile_commands.json	/^  "directory": "\/home\/n3rdy\/dev\/c\/chips",$/;"	s	object:0
directory	compile_commands.json	/^  "directory": "\/home\/n3rdy\/dev\/c\/chips",$/;"	s	object:1
display	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_display       *display;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_display *
display	deps/minifb/src/x11/WindowData_X11.h	/^    Display             *display;$/;"	m	struct:__anon24d459e50108	typeref:typename:Display *
distributionBase	deps/minifb/tests/android/gradle/wrapper/gradle-wrapper.properties	/^distributionBase=GRADLE_USER_HOME$/;"	k
distributionPath	deps/minifb/tests/android/gradle/wrapper/gradle-wrapper.properties	/^distributionPath=wrapper\/dists$/;"	k
distributionUrl	deps/minifb/tests/android/gradle/wrapper/gradle-wrapper.properties	/^distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-6.7.1-all.zip$/;"	k
doCommandBySelector:	deps/minifb/src/macosx/OSXView.m	/^- (void)doCommandBySelector:(nonnull SEL)selector {$/;"	m	implementation:OSXView	category:USE_METAL_API
dpi_aware	deps/minifb/src/windows/WinMiniFB.c	/^dpi_aware() {$/;"	f	typeref:typename:void
draw	deps/minifb/src/android/AndroidMiniFB.c	/^draw(SWindowData *window_data, ANativeWindow_Buffer *window_buffer) {$/;"	f	typeref:typename:void	file:
drawInMTKView:	deps/minifb/src/ios/iOSViewDelegate.m	/^- (void) drawInMTKView:(nonnull MTKView *) view {$/;"	m	implementation:iOSViewDelegate
drawInMTKView:	deps/minifb/src/macosx/OSXViewDelegate.m	/^- (void) drawInMTKView:(nonnull MTKView *) view {$/;"	m	implementation:OSXViewDelegate
drawRect:	deps/minifb/src/macosx/OSXView.m	/^- (void)drawRect:(NSRect)rect {$/;"	m	implementation:OSXView	category:USE_METAL_API
draw_buffer	deps/minifb/src/WindowData.h	/^    void                    *draw_buffer;$/;"	m	struct:__anon9fa120630108	typeref:typename:void *
dst_height	deps/minifb/src/WindowData.h	/^    uint32_t                dst_height;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
dst_offset_x	deps/minifb/src/WindowData.h	/^    uint32_t                dst_offset_x;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
dst_offset_y	deps/minifb/src/WindowData.h	/^    uint32_t                dst_offset_y;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
dst_width	deps/minifb/src/WindowData.h	/^    uint32_t                dst_width;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
dt	include/chip8.h	/^	char dt;$/;"	m	struct:chip8	typeref:typename:char
edit_cache	deps/minifb/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	deps/minifb/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
enabled	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^    bool    enabled;$/;"	m	struct:__anon3dcd00920108	typeref:typename:bool	file:
end	deps/minifb/tests/android/gradlew.bat	/^:end$/;"	l
execute	deps/minifb/tests/android/gradlew.bat	/^:execute$/;"	l
factor_height	deps/minifb/src/WindowData.h	/^    float                   factor_height;$/;"	m	struct:__anon9fa120630108	typeref:typename:float
factor_width	deps/minifb/src/WindowData.h	/^    float                   factor_width;$/;"	m	struct:__anon9fa120630108	typeref:typename:float
factor_x	deps/minifb/src/WindowData.h	/^    float                   factor_x;$/;"	m	struct:__anon9fa120630108	typeref:typename:float
factor_y	deps/minifb/src/WindowData.h	/^    float                   factor_y;$/;"	m	struct:__anon9fa120630108	typeref:typename:float
fail	deps/minifb/tests/android/gradlew.bat	/^:fail$/;"	l
fd	deps/minifb/src/wayland/WindowData_Way.h	/^    int                     fd;$/;"	m	struct:__anon44bf58f20108	typeref:typename:int
file	compile_commands.json	/^  "file": "src\/chip8.c"$/;"	s	object:1
file	compile_commands.json	/^  "file": "src\/main.c"$/;"	s	object:0
findJavaFromJavaHome	deps/minifb/tests/android/gradlew.bat	/^:findJavaFromJavaHome$/;"	l
firstRectForCharacterRange:actualRange:	deps/minifb/src/macosx/OSXView.m	/^- (NSRect)firstRectForCharacterRange:(NSRange)range actualRange:(nullable NSRangePointer)actualR/;"	m	implementation:OSXView	category:USE_METAL_API
flags	deps/minifb/src/x11/X11MiniFB.c	/^            unsigned long   flags;$/;"	m	struct:mfb_open_ex::StyleHints	typeref:typename:unsigned long	file:
flagsChanged:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
frame	deps/minifb/src/wayland/WaylandMiniFB.c	/^frame(void *data, struct wl_pointer *pointer) {$/;"	f	typeref:typename:void	file:
frameRectForContentRect:styleMask:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	c	implementation:OSXWindow
frame_done	deps/minifb/src/wayland/WaylandMiniFB.c	/^frame_done(void *data, struct wl_callback *callback, uint32_t cookie)$/;"	f	typeref:typename:void	file:
frame_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^wl_callback_listener frame_listener = {$/;"	v	typeref:typename:const struct wl_callback_listener	file:
functions	deps/minifb/src/x11/X11MiniFB.c	/^            unsigned long   functions;$/;"	m	struct:mfb_open_ex::StyleHints	typeref:typename:unsigned long	file:
gApplication	deps/minifb/src/android/AndroidMiniFB.c	/^struct android_app  *gApplication;$/;"	v	typeref:struct:android_app *
g_active	deps/minifb/tests/input_events.c	/^static bool         g_active = true;$/;"	v	typeref:typename:bool	file:
g_buffer	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^static uint32_t *g_buffer = 0x0;$/;"	v	typeref:typename:uint32_t *	file:
g_buffer	deps/minifb/tests/input_events.c	/^static unsigned int g_buffer[WIDTH * HEIGHT];$/;"	v	typeref:typename:unsigned int[]	file:
g_buffer	deps/minifb/tests/input_events_cpp.cpp	/^static unsigned int g_buffer[WIDTH * HEIGHT];$/;"	v	typeref:typename:unsigned int[]	file:
g_buffer	deps/minifb/tests/noise.c	/^static uint32_t *g_buffer = 0x0;$/;"	v	typeref:typename:uint32_t *	file:
g_buffer_a	deps/minifb/tests/multiple_windows.c	/^static unsigned int g_buffer_a[WIDTH_A * HEIGHT_A];$/;"	v	typeref:typename:unsigned int[]	file:
g_buffer_b	deps/minifb/tests/multiple_windows.c	/^static unsigned int g_buffer_b[WIDTH_B * HEIGHT_B];$/;"	v	typeref:typename:unsigned int[]	file:
g_buffer_high	deps/minifb/tests/hidpi.c	/^static unsigned int g_buffer_high[DIMEN_HIGH * DIMEN_HIGH];$/;"	v	typeref:typename:unsigned int[]	file:
g_buffer_low	deps/minifb/tests/hidpi.c	/^static unsigned int g_buffer_low[DIMEN_LOW * DIMEN_LOW];$/;"	v	typeref:typename:unsigned int[]	file:
g_height	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^static uint32_t  g_height = 100;$/;"	v	typeref:typename:uint32_t	file:
g_height	deps/minifb/tests/ios/AppDelegate.m	/^    g_buffer = realloc(g_buffer, g_width * g_height * 4);$/;"	E	interface:AppDelegate
g_height	deps/minifb/tests/noise.c	/^static uint32_t  g_height = 600;$/;"	v	typeref:typename:uint32_t	file:
g_keycodes	deps/minifb/src/MiniFB_common.c	/^short int g_keycodes[512] = { 0 };$/;"	v	typeref:typename:short int[512]
g_positions	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^static Pos      g_positions[16] = {};$/;"	v	typeref:typename:Pos[16]	file:
g_time_for_frame	deps/minifb/src/MiniFB_timer.c	/^double      g_time_for_frame = 1.0 \/ 60.0;$/;"	v	typeref:typename:double
g_timer_frequency	deps/minifb/src/MiniFB_timer.c	/^double      g_timer_frequency;$/;"	v	typeref:typename:double
g_timer_resolution	deps/minifb/src/MiniFB_timer.c	/^double      g_timer_resolution;$/;"	v	typeref:typename:double
g_use_hardware_sync	deps/minifb/src/MiniFB_timer.c	/^bool        g_use_hardware_sync = false;$/;"	v	typeref:typename:bool
g_width	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^static uint32_t  g_width  = 200;$/;"	v	typeref:typename:uint32_t	file:
g_width	deps/minifb/tests/noise.c	/^static uint32_t  g_width  = 800;$/;"	v	typeref:typename:uint32_t	file:
gc	deps/minifb/src/x11/WindowData_X11.h	/^    GC                  gc;$/;"	m	struct:__anon24d459e50108	typeref:typename:GC
get_monitor_scale	deps/minifb/src/windows/WinMiniFB.c	/^get_monitor_scale(HWND hWnd, float *scale_x, float *scale_y) {$/;"	f	typeref:typename:void
hGLRC	deps/minifb/src/windows/WindowData_Win.h	/^    HGLRC               hGLRC;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:HGLRC
handle_cmd	deps/minifb/src/android/AndroidMiniFB.c	/^handle_cmd(struct android_app* app, int32_t cmd) {$/;"	f	typeref:typename:void	file:
handle_configure	deps/minifb/src/wayland/WaylandMiniFB.c	/^handle_configure(void *data, struct wl_shell_surface *shell_surface, uint32_t edges, int32_t wid/;"	f	typeref:typename:void	file:
handle_input	deps/minifb/src/android/AndroidMiniFB.c	/^handle_input(struct android_app* app, AInputEvent* event) {$/;"	f	typeref:typename:int32_t	file:
handle_ping	deps/minifb/src/wayland/WaylandMiniFB.c	/^handle_ping(void *data, struct wl_shell_surface *shell_surface, uint32_t serial)$/;"	f	typeref:typename:void	file:
handle_popup_done	deps/minifb/src/wayland/WaylandMiniFB.c	/^handle_popup_done(void *data, struct wl_shell_surface *shell_surface)$/;"	f	typeref:typename:void	file:
hasMarkedText	deps/minifb/src/macosx/OSXView.m	/^- (BOOL)hasMarkedText {$/;"	m	implementation:OSXView	category:USE_METAL_API
hdc	deps/minifb/src/windows/WindowData_Win.h	/^    HDC                 hdc;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:HDC
height	deps/minifb/tests/ios/AppDelegate.m	/^    NSLog(@"Resize %d, %d", width, height);$/;"	E	interface:AppDelegate
height	deps/minifb/tests/ios/AppDelegate.m	/^    g_height = height;$/;"	E	interface:AppDelegate
help	deps/minifb/Makefile	/^help:$/;"	t
hidpi	deps/minifb/CMakeLists.txt	/^        add_executable(hidpi$/;"	t
hidpi	deps/minifb/Makefile	/^hidpi: deps\/minifb\/CMakeFiles\/hidpi.dir\/rule$/;"	t
hidpi/fast	deps/minifb/Makefile	/^hidpi\/fast:$/;"	t
i	include/chip8.h	/^	short int i;$/;"	m	struct:chip8	typeref:typename:short int
iOS (beta)	deps/minifb/README.md	/^## iOS (beta)$/;"	s	chapter:Build instructions
iOSView	deps/minifb/src/ios/iOSView.h	/^@interface iOSView : MTKView$/;"	i
iOSView	deps/minifb/src/ios/iOSView.m	/^@implementation iOSView$/;"	I
iOSViewController	deps/minifb/src/ios/iOSViewController.h	/^@interface iOSViewController : UIViewController$/;"	i
iOSViewController	deps/minifb/src/ios/iOSViewController.m	/^@implementation iOSViewController$/;"	I
iOSViewDelegate	deps/minifb/src/ios/iOSViewDelegate.h	/^@interface iOSViewDelegate : NSObject <MTKViewDelegate>$/;"	i	protocols:MTKViewDelegate
iOSViewDelegate	deps/minifb/src/ios/iOSViewDelegate.m	/^@implementation iOSViewDelegate {$/;"	I
image	deps/minifb/src/x11/WindowData_X11.h	/^    XImage              *image;$/;"	m	struct:__anon24d459e50108	typeref:typename:XImage *
image_buffer	deps/minifb/src/x11/WindowData_X11.h	/^    void                *image_buffer;$/;"	m	struct:__anon24d459e50108	typeref:typename:void *
image_scaler	deps/minifb/src/x11/WindowData_X11.h	/^    XImage              *image_scaler;$/;"	m	struct:__anon24d459e50108	typeref:typename:XImage *
image_scaler_height	deps/minifb/src/x11/WindowData_X11.h	/^    uint32_t            image_scaler_height;$/;"	m	struct:__anon24d459e50108	typeref:typename:uint32_t
image_scaler_width	deps/minifb/src/x11/WindowData_X11.h	/^    uint32_t            image_scaler_width;$/;"	m	struct:__anon24d459e50108	typeref:typename:uint32_t
init	deps/minifb/tests/android/gradlew.bat	/^:init$/;"	l
initWithContentRect:styleMask:backing:defer:windowData:	deps/minifb/src/macosx/OSXWindow.h	/^               windowData:(SWindowData *) windowData;$/;"	m	interface:OSXWindow
initWithContentRect:styleMask:backing:defer:windowData:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
initWithMetalKitView:windowData:	deps/minifb/src/ios/iOSViewDelegate.h	/^-(nonnull instancetype) initWithMetalKitView:(nonnull MTKView *) view windowData:(nonnull SWindo/;"	m	interface:iOSViewDelegate
initWithMetalKitView:windowData:	deps/minifb/src/ios/iOSViewDelegate.m	/^-(nonnull instancetype) initWithMetalKitView:(nonnull MTKView *) view windowData:(nonnull SWindo/;"	m	implementation:iOSViewDelegate
initWithWindowData:	deps/minifb/src/ios/iOSViewController.h	/^- (id) initWithWindowData:(SWindowData *) windowData;$/;"	m	interface:iOSViewController
initWithWindowData:	deps/minifb/src/ios/iOSViewController.m	/^- (id) initWithWindowData:(SWindowData *) windowData {$/;"	m	implementation:iOSViewController
initWithWindowData:	deps/minifb/src/macosx/OSXViewDelegate.h	/^- (id) initWithWindowData:(SWindowData *) windowData;$/;"	m	interface:OSXViewDelegate
initWithWindowData:	deps/minifb/src/macosx/OSXViewDelegate.m	/^- (id) initWithWindowData:(SWindowData *) windowData {$/;"	m	implementation:OSXViewDelegate
init_GL	deps/minifb/src/gl/MiniFB_GL.c	/^init_GL(SWindowData *window_data) {$/;"	f	typeref:typename:void
init_keycodes	deps/minifb/src/macosx/MacMiniFB.m	/^init_keycodes() {$/;"	f
init_keycodes	deps/minifb/src/macosx/MacMiniFB.m	/^void init_keycodes();$/;"	f
init_keycodes	deps/minifb/src/wayland/WaylandMiniFB.c	/^init_keycodes(void)$/;"	f	typeref:typename:void
init_keycodes	deps/minifb/src/windows/WinMiniFB.c	/^init_keycodes() {$/;"	f	typeref:typename:void
init_keycodes	deps/minifb/src/x11/X11MiniFB.c	/^init_keycodes(SWindowData_X11 *window_data_x11) {$/;"	f	typeref:typename:void
inputMode	deps/minifb/src/x11/X11MiniFB.c	/^            long            inputMode;$/;"	m	struct:mfb_open_ex::StyleHints	typeref:typename:long	file:
input_events	deps/minifb/CMakeLists.txt	/^        add_executable(input_events$/;"	t
input_events	deps/minifb/Makefile	/^input_events: deps\/minifb\/CMakeFiles\/input_events.dir\/rule$/;"	t
input_events/fast	deps/minifb/Makefile	/^input_events\/fast:$/;"	t
input_events_cpp	deps/minifb/CMakeLists.txt	/^        add_executable(input_events_cpp$/;"	t
input_events_cpp	deps/minifb/Makefile	/^input_events_cpp: deps\/minifb\/CMakeFiles\/input_events_cpp.dir\/rule$/;"	t
input_events_cpp/fast	deps/minifb/Makefile	/^input_events_cpp\/fast:$/;"	t
insertText:replacementRange:	deps/minifb/src/macosx/OSXView.m	/^- (void)insertText:(nonnull id)string replacementRange:(NSRange)replacementRange {$/;"	m	implementation:OSXView	category:USE_METAL_API
instances	deps/minifb/src/MiniFB_cpp.cpp	/^        std::vector<mfb_stub *> instances;$/;"	m	struct:mfb_stub::GetInstance::stub_vector	typeref:typename:std::vector<mfb_stub * >	file:
interpolate	deps/minifb/src/MiniFB_internal.c	/^interpolate(uint32_t *srcImage, uint32_t x, uint32_t y, uint32_t srcOffsetX, uint32_t srcOffsetY/;"	f	typeref:typename:uint32_t	file:
isPressed	deps/minifb/tests/ios/AppDelegate.m	/^    NSLog(@"Touch: %d at %d, %d is %d", (int)button - MOUSE_BTN_0, mfb_get_mouse_x(window), mfb_/;"	E	interface:AppDelegate
is_active	deps/minifb/src/WindowData.h	/^    bool                    is_active;$/;"	m	struct:__anon9fa120630108	typeref:typename:bool
is_initialized	deps/minifb/src/WindowData.h	/^    bool                    is_initialized;$/;"	m	struct:__anon9fa120630108	typeref:typename:bool
kCall	deps/minifb/src/MiniFB_internal.h	/^#define kCall(/;"	d
kCall	deps/minifb/src/android/AndroidMiniFB.c	/^#define kCall(/;"	d	file:
kClock	deps/minifb/src/MiniFB_linux.c	/^#define kClock /;"	d	file:
kGLX_MAX_SWAP_INTERVAL_EXT	deps/minifb/src/gl/MiniFB_GL.c	/^    #define kGLX_MAX_SWAP_INTERVAL_EXT /;"	d	file:
kGLX_SWAP_INTERVAL_EXT	deps/minifb/src/gl/MiniFB_GL.c	/^    #define kGLX_SWAP_INTERVAL_EXT /;"	d	file:
kPI	deps/minifb/tests/multiple_windows.c	/^#define kPI /;"	d	file:
kShader	deps/minifb/src/ios/iOSViewDelegate.m	/^#define kShader(inc, src)    @inc#src$/;"	M
kShader	deps/minifb/src/ios/iOSViewDelegate.m	/^NSString *g_shader_src = kShader($/;"	f
kShader	deps/minifb/src/macosx/OSXViewDelegate.m	/^#define kShader(inc, src)    @inc#src$/;"	M
kShader	deps/minifb/src/macosx/OSXViewDelegate.m	/^NSString *g_shader_src = kShader($/;"	f
kTouchIdMask	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define kTouchIdMask /;"	d	file:
kTouchIdShift	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define kTouchIdShift /;"	d	file:
kTouchPosMask	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define kTouchPosMask /;"	d	file:
kUnused	deps/minifb/src/MiniFB_internal.h	/^#define kUnused(/;"	d
kUnused	deps/minifb/src/android/AndroidMiniFB.c	/^#define kUnused(/;"	d	file:
kUnused	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^#define kUnused(/;"	d	file:
kUnused	deps/minifb/tests/input_events.c	/^#define kUnused(/;"	d	file:
kUnused	deps/minifb/tests/input_events_cpp.cpp	/^#define kUnused(/;"	d	file:
kUnused	deps/minifb/tests/ios/AppDelegate.m	/^    kUnused(mod);$/;"	E	interface:AppDelegate
kUnused	deps/minifb/tests/ios/AppDelegate.m	/^    kUnused(window);$/;"	E	interface:AppDelegate
kUnused	deps/minifb/tests/ios/AppDelegate.m	/^#define kUnused(var)        (void) var;$/;"	M
kUnused	deps/minifb/tests/multiple_windows.c	/^#define kUnused(/;"	d	file:
keyDown:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
keyUp:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
key_status	deps/minifb/src/WindowData.h	/^    uint8_t                 key_status[512];$/;"	m	struct:__anon9fa120630108	typeref:typename:uint8_t[512]
keyboard	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_keyboard      *keyboard;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_keyboard *
keyboard	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^keyboard(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void
keyboard	deps/minifb/tests/input_events.c	/^keyboard(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void	file:
keyboard	deps/minifb/tests/input_events_cpp.cpp	/^    void keyboard(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool isPressed) {$/;"	f	class:Events	typeref:typename:void	file:
keyboard	deps/minifb/tests/multiple_windows.c	/^keyboard(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void
keyboard_default	deps/minifb/src/MiniFB_common.c	/^keyboard_default(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void
keyboard_enter	deps/minifb/src/wayland/WaylandMiniFB.c	/^keyboard_enter(void *data, struct wl_keyboard *keyboard, uint32_t serial, struct wl_surface *sur/;"	f	typeref:typename:void	file:
keyboard_func	deps/minifb/src/WindowData.h	/^	mfb_keyboard_func       keyboard_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_keyboard_func
keyboard_key	deps/minifb/src/wayland/WaylandMiniFB.c	/^keyboard_key(void *data, struct wl_keyboard *keyboard, uint32_t serial, uint32_t time, uint32_t /;"	f	typeref:typename:void	file:
keyboard_keymap	deps/minifb/src/wayland/WaylandMiniFB.c	/^keyboard_keymap(void *data, struct wl_keyboard *keyboard, uint32_t format, int fd, uint32_t size/;"	f	typeref:typename:void	file:
keyboard_leave	deps/minifb/src/wayland/WaylandMiniFB.c	/^keyboard_leave(void *data, struct wl_keyboard *keyboard, uint32_t serial, struct wl_surface *sur/;"	f	typeref:typename:void	file:
keyboard_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^wl_keyboard_listener keyboard_listener = {$/;"	v	typeref:typename:const struct wl_keyboard_listener	file:
keyboard_modifiers	deps/minifb/src/wayland/WaylandMiniFB.c	/^keyboard_modifiers(void *data, struct wl_keyboard *keyboard, uint32_t serial, uint32_t mods_depr/;"	f	typeref:typename:void	file:
keyboard_repeat_info	deps/minifb/src/wayland/WaylandMiniFB.c	/^keyboard_repeat_info(void *data, struct wl_keyboard *keyboard, int32_t rate, int32_t delay)$/;"	f	typeref:typename:void	file:
keyboard_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::keyboard_stub(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool isPressed)/;"	f	class:mfb_stub	typeref:typename:void
loadView	deps/minifb/src/ios/iOSViewController.m	/^- (void) loadView {$/;"	m	implementation:iOSViewController
load_functions	deps/minifb/src/windows/WinMiniFB.c	/^load_functions() {$/;"	f	typeref:typename:void
mDisplayLink	deps/minifb/tests/ios/AppDelegate.h	/^    CADisplayLink   *mDisplayLink;$/;"	E	interface:AppDelegate
m_active	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, bool)>                        m_active;$/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,bool)>
m_char_input	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, unsigned int)>                m_char_input;$/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,unsigned int)>
m_close	deps/minifb/include/MiniFB_cpp.h	/^    std::function<bool(struct mfb_window *window)>                              m_close;$/;"	m	class:mfb_stub	typeref:typename:std::function<bool (struct mfb_window * window)>
m_keyboard	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, mfb_key, mfb_key_mod, bool)>  m_keyboard;$/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,mfb_key,mfb_key_mod,bool)>
m_mouse_btn	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, mfb_mouse_button, mfb_key_mod, bool)>   m_mous/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,mfb_mouse_button,mfb_key_mod,bool)>
m_mouse_move	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, int, int)>                    m_mouse_move;$/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,int,int)>
m_resize	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, int, int)>                    m_resize;$/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,int,int)>
m_scroll	deps/minifb/include/MiniFB_cpp.h	/^    std::function<void(struct mfb_window *window, mfb_key_mod, float, float)>   m_scroll;$/;"	m	class:mfb_stub	typeref:typename:std::function<void (struct mfb_window * window,mfb_key_mod,float,float)>
m_window	deps/minifb/include/MiniFB_cpp.h	/^    struct mfb_window                                                           *m_window;$/;"	m	class:mfb_stub	typeref:struct:mfb_window *
main	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	deps/minifb/tests/hidpi.c	/^main() {$/;"	f	typeref:typename:int
main	deps/minifb/tests/input_events.c	/^main()$/;"	f	typeref:typename:int
main	deps/minifb/tests/input_events_cpp.cpp	/^main()$/;"	f	typeref:typename:int
main	deps/minifb/tests/ios/main.m	/^int main(int argc, char * argv[]) {$/;"	f
main	deps/minifb/tests/multiple_windows.c	/^main()$/;"	f	typeref:typename:int
main	deps/minifb/tests/noise.c	/^main()$/;"	f	typeref:typename:int
main	src/main.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
mainEnd	deps/minifb/tests/android/gradlew.bat	/^:mainEnd$/;"	l
mainWindowChanged:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
markedRange	deps/minifb/src/macosx/OSXView.m	/^- (NSRange)markedRange {$/;"	m	implementation:OSXView	category:USE_METAL_API
mem	include/chip8.h	/^	char mem[4096];$/;"	m	struct:chip8	typeref:typename:char[4096]
metal	deps/minifb/src/macosx/WindowData_OSX.h	/^    } metal;$/;"	m	struct:__anoncaa6ffd60108	typeref:struct:__anoncaa6ffd60108::__anoncaa6ffd60208
metal_device	deps/minifb/src/macosx/OSXViewDelegate.h	/^    id<MTLDevice>               metal_device;$/;"	E	interface:OSXViewDelegate
metal_library	deps/minifb/src/macosx/OSXViewDelegate.h	/^    id<MTLLibrary>              metal_library;$/;"	E	interface:OSXViewDelegate
mfb_DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE	deps/minifb/src/windows/WinMiniFB.c	/^#define mfb_DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE /;"	d	file:
mfb_DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2	deps/minifb/src/windows/WinMiniFB.c	/^#define mfb_DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 /;"	d	file:
mfb_DPI_AWARENESS_CONTEXT_SYSTEM_AWARE	deps/minifb/src/windows/WinMiniFB.c	/^#define mfb_DPI_AWARENESS_CONTEXT_SYSTEM_AWARE /;"	d	file:
mfb_DPI_AWARENESS_CONTEXT_UNAWARE	deps/minifb/src/windows/WinMiniFB.c	/^#define mfb_DPI_AWARENESS_CONTEXT_UNAWARE /;"	d	file:
mfb_DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED	deps/minifb/src/windows/WinMiniFB.c	/^#define mfb_DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED /;"	d	file:
mfb_EnableNonClientDpiScaling	deps/minifb/src/windows/WinMiniFB.c	/^PFN_EnableNonClientDpiScaling     mfb_EnableNonClientDpiScaling     = 0x0;$/;"	v	typeref:typename:PFN_EnableNonClientDpiScaling
mfb_GetDpiForMonitor	deps/minifb/src/windows/WinMiniFB.c	/^PFN_GetDpiForMonitor              mfb_GetDpiForMonitor              = 0x0;$/;"	v	typeref:typename:PFN_GetDpiForMonitor
mfb_GetDpiForWindow	deps/minifb/src/windows/WinMiniFB.c	/^PFN_GetDpiForWindow               mfb_GetDpiForWindow               = 0x0;$/;"	v	typeref:typename:PFN_GetDpiForWindow
mfb_MDT_ANGULAR_DPI	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_MDT_ANGULAR_DPI               = 1,$/;"	e	enum:mfb_MONITOR_DPI_TYPE	file:
mfb_MDT_DEFAULT	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_MDT_DEFAULT                   = mfb_MDT_EFFECTIVE_DPI$/;"	e	enum:mfb_MONITOR_DPI_TYPE	file:
mfb_MDT_EFFECTIVE_DPI	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_MDT_EFFECTIVE_DPI             = 0,$/;"	e	enum:mfb_MONITOR_DPI_TYPE	file:
mfb_MDT_RAW_DPI	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_MDT_RAW_DPI                   = 2,$/;"	e	enum:mfb_MONITOR_DPI_TYPE	file:
mfb_MONITOR_DPI_TYPE	deps/minifb/src/windows/WinMiniFB.c	/^typedef enum mfb_MONITOR_DPI_TYPE {$/;"	g	file:
mfb_MONITOR_DPI_TYPE	deps/minifb/src/windows/WinMiniFB.c	/^} mfb_MONITOR_DPI_TYPE;$/;"	t	typeref:enum:mfb_MONITOR_DPI_TYPE	file:
mfb_PROCESS_DPI_AWARENESS	deps/minifb/src/windows/WinMiniFB.c	/^typedef enum mfb_PROCESS_DPI_AWARENESS {$/;"	g	file:
mfb_PROCESS_DPI_AWARENESS	deps/minifb/src/windows/WinMiniFB.c	/^} mfb_PROCESS_DPI_AWARENESS;$/;"	t	typeref:enum:mfb_PROCESS_DPI_AWARENESS	file:
mfb_PROCESS_DPI_UNAWARE	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_PROCESS_DPI_UNAWARE           = 0,$/;"	e	enum:mfb_PROCESS_DPI_AWARENESS	file:
mfb_PROCESS_PER_MONITOR_DPI_AWARE	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_PROCESS_PER_MONITOR_DPI_AWARE = 2$/;"	e	enum:mfb_PROCESS_DPI_AWARENESS	file:
mfb_PROCESS_SYSTEM_DPI_AWARE	deps/minifb/src/windows/WinMiniFB.c	/^    mfb_PROCESS_SYSTEM_DPI_AWARE      = 1,$/;"	e	enum:mfb_PROCESS_DPI_AWARENESS	file:
mfb_SetProcessDPIAware	deps/minifb/src/windows/WinMiniFB.c	/^PFN_SetProcessDPIAware            mfb_SetProcessDPIAware            = 0x0;$/;"	v	typeref:typename:PFN_SetProcessDPIAware
mfb_SetProcessDpiAwareness	deps/minifb/src/windows/WinMiniFB.c	/^PFN_SetProcessDpiAwareness        mfb_SetProcessDpiAwareness        = 0x0;$/;"	v	typeref:typename:PFN_SetProcessDpiAwareness
mfb_SetProcessDpiAwarenessContext	deps/minifb/src/windows/WinMiniFB.c	/^PFN_SetProcessDpiAwarenessContext mfb_SetProcessDpiAwarenessContext = 0x0;$/;"	v	typeref:typename:PFN_SetProcessDpiAwarenessContext
mfb_active_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_active_func)(struct mfb_window *window, bool isActive);$/;"	t	typeref:typename:void (*)(struct mfb_window * window,bool isActive)
mfb_char_input_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_char_input_func)(struct mfb_window *window, unsigned int code);$/;"	t	typeref:typename:void (*)(struct mfb_window * window,unsigned int code)
mfb_close	deps/minifb/src/MiniFB_common.c	/^mfb_close(struct mfb_window *window) {$/;"	f	typeref:typename:void
mfb_close_func	deps/minifb/include/MiniFB_enums.h	/^typedef bool(*mfb_close_func)(struct mfb_window* window);$/;"	t	typeref:typename:bool (*)(struct mfb_window * window)
mfb_get_key_buffer	deps/minifb/src/MiniFB_common.c	/^mfb_get_key_buffer(struct mfb_window *window)  {$/;"	f	typeref:typename:const uint8_t *
mfb_get_key_name	deps/minifb/src/MiniFB_common.c	/^mfb_get_key_name(mfb_key key) {$/;"	f	typeref:typename:const char *
mfb_get_monitor_dpi	deps/minifb/src/MiniFB_common.c	/^mfb_get_monitor_dpi(struct mfb_window *window, float *dpi_x, float *dpi_y) {$/;"	f	typeref:typename:void
mfb_get_monitor_scale	deps/minifb/src/android/AndroidMiniFB.c	/^mfb_get_monitor_scale(struct mfb_window *window, float *scale_x, float *scale_y) {$/;"	f	typeref:typename:void
mfb_get_monitor_scale	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_get_monitor_scale(struct mfb_window *window, float *scale_x, float *scale_y) {$/;"	f
mfb_get_monitor_scale	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_get_monitor_scale(struct mfb_window *window, float *scale_x, float *scale_y) {$/;"	f
mfb_get_monitor_scale	deps/minifb/src/wayland/WaylandMiniFB.c	/^mfb_get_monitor_scale(struct mfb_window *window, float *scale_x, float *scale_y) {$/;"	f	typeref:typename:void
mfb_get_monitor_scale	deps/minifb/src/windows/WinMiniFB.c	/^mfb_get_monitor_scale(struct mfb_window *window, float *scale_x, float *scale_y) {$/;"	f	typeref:typename:void
mfb_get_monitor_scale	deps/minifb/src/x11/X11MiniFB.c	/^mfb_get_monitor_scale(struct mfb_window *window, float *scale_x, float *scale_y) {$/;"	f	typeref:typename:void
mfb_get_mouse_button_buffer	deps/minifb/src/MiniFB_common.c	/^mfb_get_mouse_button_buffer(struct mfb_window *window) {$/;"	f	typeref:typename:const uint8_t *
mfb_get_mouse_scroll_x	deps/minifb/src/MiniFB_common.c	/^mfb_get_mouse_scroll_x(struct mfb_window *window) {$/;"	f	typeref:typename:float
mfb_get_mouse_scroll_y	deps/minifb/src/MiniFB_common.c	/^mfb_get_mouse_scroll_y(struct mfb_window *window) {$/;"	f	typeref:typename:float
mfb_get_mouse_x	deps/minifb/src/MiniFB_common.c	/^mfb_get_mouse_x(struct mfb_window *window) {$/;"	f	typeref:typename:int
mfb_get_mouse_y	deps/minifb/src/MiniFB_common.c	/^mfb_get_mouse_y(struct mfb_window *window) {$/;"	f	typeref:typename:int
mfb_get_target_fps	deps/minifb/src/MiniFB_timer.c	/^mfb_get_target_fps() {$/;"	f	typeref:typename:unsigned
mfb_get_user_data	deps/minifb/src/MiniFB_common.c	/^mfb_get_user_data(struct mfb_window *window) {$/;"	f	typeref:typename:void *
mfb_get_window_height	deps/minifb/src/MiniFB_common.c	/^mfb_get_window_height(struct mfb_window *window) {$/;"	f	typeref:typename:unsigned
mfb_get_window_width	deps/minifb/src/MiniFB_common.c	/^mfb_get_window_width(struct mfb_window *window) {$/;"	f	typeref:typename:unsigned
mfb_is_window_active	deps/minifb/src/MiniFB_common.c	/^mfb_is_window_active(struct mfb_window *window) {$/;"	f	typeref:typename:bool
mfb_key	deps/minifb/include/MiniFB_enums.h	/^} mfb_key;$/;"	t	typeref:enum:__anond56f22090303
mfb_key_mod	deps/minifb/include/MiniFB_enums.h	/^} mfb_key_mod;$/;"	t	typeref:enum:__anond56f22090403
mfb_keyboard_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_keyboard_func)(struct mfb_window *window, mfb_key key, mfb_key_mod mod, bool i/;"	t	typeref:typename:void (*)(struct mfb_window * window,mfb_key key,mfb_key_mod mod,bool isPressed)
mfb_mouse_button	deps/minifb/include/MiniFB_enums.h	/^} mfb_mouse_button;$/;"	t	typeref:enum:__anond56f22090203
mfb_mouse_button_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_mouse_button_func)(struct mfb_window *window, mfb_mouse_button button, mfb_key/;"	t	typeref:typename:void (*)(struct mfb_window * window,mfb_mouse_button button,mfb_key_mod mod,bool isPressed)
mfb_mouse_move_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_mouse_move_func)(struct mfb_window *window, int x, int y);$/;"	t	typeref:typename:void (*)(struct mfb_window * window,int x,int y)
mfb_mouse_scroll_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_mouse_scroll_func)(struct mfb_window *window, mfb_key_mod mod, float deltaX, f/;"	t	typeref:typename:void (*)(struct mfb_window * window,mfb_key_mod mod,float deltaX,float deltaY)
mfb_open	deps/minifb/src/MiniFB_common.c	/^mfb_open(const char *title, unsigned width, unsigned height) {$/;"	f	typeref:struct:mfb_window *
mfb_open_ex	deps/minifb/src/android/AndroidMiniFB.c	/^mfb_open_ex(const char *title, unsigned width, unsigned height, unsigned flags) {$/;"	f	typeref:struct:mfb_window *
mfb_open_ex	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_open_ex(const char *title, unsigned width, unsigned height, unsigned flags) {$/;"	f
mfb_open_ex	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_open_ex(const char *title, unsigned width, unsigned height, unsigned flags) {$/;"	f
mfb_open_ex	deps/minifb/src/wayland/WaylandMiniFB.c	/^mfb_open_ex(const char *title, unsigned width, unsigned height, unsigned flags)$/;"	f	typeref:struct:mfb_window *
mfb_open_ex	deps/minifb/src/windows/WinMiniFB.c	/^mfb_open_ex(const char *title, unsigned width, unsigned height, unsigned flags) {$/;"	f	typeref:struct:mfb_window *
mfb_open_ex	deps/minifb/src/x11/X11MiniFB.c	/^mfb_open_ex(const char *title, unsigned width, unsigned height, unsigned flags) {$/;"	f	typeref:struct:mfb_window *
mfb_resize_func	deps/minifb/include/MiniFB_enums.h	/^typedef void(*mfb_resize_func)(struct mfb_window *window, int width, int height);$/;"	t	typeref:typename:void (*)(struct mfb_window * window,int width,int height)
mfb_set_active_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_active_callback(struct mfb_window *window, T *obj, void (T::*method)(struct /;"	f	typeref:typename:void
mfb_set_active_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_active_callback(struct mfb_window *window, mfb_active_func callback) {$/;"	f	typeref:typename:void
mfb_set_active_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_active_callback(std::function<void(struct mfb_window *, bool)> func, struct mfb_window */;"	f	typeref:typename:void
mfb_set_char_input_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_char_input_callback(struct mfb_window *window, T *obj, void (T::*method)(str/;"	f	typeref:typename:void
mfb_set_char_input_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_char_input_callback(struct mfb_window *window, mfb_char_input_func callback) {$/;"	f	typeref:typename:void
mfb_set_char_input_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_char_input_callback(std::function<void(struct mfb_window *, unsigned int)> func, struct /;"	f	typeref:typename:void
mfb_set_close_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_close_callback(struct mfb_window *window, T *obj, bool (T::*method)(struct m/;"	f	typeref:typename:void
mfb_set_close_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_close_callback(struct mfb_window* window, mfb_close_func callback) {$/;"	f	typeref:typename:void
mfb_set_close_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_close_callback(std::function<bool(struct mfb_window *)> func, struct mfb_window *window)/;"	f	typeref:typename:void
mfb_set_keyboard_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_keyboard_callback(struct mfb_window *window, T *obj, void (T::*method)(struc/;"	f	typeref:typename:void
mfb_set_keyboard_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_keyboard_callback(struct mfb_window *window, mfb_keyboard_func callback) {$/;"	f	typeref:typename:void
mfb_set_keyboard_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_keyboard_callback(std::function<void(struct mfb_window *, mfb_key, mfb_key_mod, bool)> f/;"	f	typeref:typename:void
mfb_set_mouse_button_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_mouse_button_callback(struct mfb_window *window, T *obj, void (T::*method)(s/;"	f	typeref:typename:void
mfb_set_mouse_button_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_mouse_button_callback(struct mfb_window *window, mfb_mouse_button_func callback) {$/;"	f	typeref:typename:void
mfb_set_mouse_button_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_mouse_button_callback(std::function<void(struct mfb_window *, mfb_mouse_button, mfb_key_/;"	f	typeref:typename:void
mfb_set_mouse_move_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_mouse_move_callback(struct mfb_window *window, T *obj, void (T::*method)(str/;"	f	typeref:typename:void
mfb_set_mouse_move_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_mouse_move_callback(struct mfb_window *window, mfb_mouse_move_func callback) {$/;"	f	typeref:typename:void
mfb_set_mouse_move_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_mouse_move_callback(std::function<void(struct mfb_window *, int, int)> func, struct mfb_/;"	f	typeref:typename:void
mfb_set_mouse_scroll_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_mouse_scroll_callback(struct mfb_window *window, T *obj, void (T::*method)(s/;"	f	typeref:typename:void
mfb_set_mouse_scroll_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_mouse_scroll_callback(struct mfb_window *window, mfb_mouse_scroll_func callback) {$/;"	f	typeref:typename:void
mfb_set_mouse_scroll_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_mouse_scroll_callback(std::function<void(struct mfb_window *, mfb_key_mod, float, float)/;"	f	typeref:typename:void
mfb_set_resize_callback	deps/minifb/include/MiniFB_cpp.h	/^inline void mfb_set_resize_callback(struct mfb_window *window, T *obj, void (T::*method)(struct /;"	f	typeref:typename:void
mfb_set_resize_callback	deps/minifb/src/MiniFB_common.c	/^mfb_set_resize_callback(struct mfb_window *window, mfb_resize_func callback) {$/;"	f	typeref:typename:void
mfb_set_resize_callback	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_set_resize_callback(std::function<void(struct mfb_window *, int, int)> func, struct mfb_wind/;"	f	typeref:typename:void
mfb_set_target_fps	deps/minifb/src/MiniFB_timer.c	/^mfb_set_target_fps(uint32_t fps) {$/;"	f	typeref:typename:void
mfb_set_user_data	deps/minifb/src/MiniFB_common.c	/^mfb_set_user_data(struct mfb_window *window, void *user_data) {$/;"	f	typeref:typename:void
mfb_set_viewport	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_set_viewport(struct mfb_window *window, unsigned offset_x, unsigned offset_y, unsigned width/;"	f
mfb_set_viewport	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_set_viewport(struct mfb_window *window, unsigned offset_x, unsigned offset_y, unsigned width/;"	f
mfb_set_viewport	deps/minifb/src/wayland/WaylandMiniFB.c	/^mfb_set_viewport(struct mfb_window *window, unsigned offset_x, unsigned offset_y, unsigned width/;"	f	typeref:typename:bool
mfb_set_viewport	deps/minifb/src/windows/WinMiniFB.c	/^mfb_set_viewport(struct mfb_window *window, unsigned offset_x, unsigned offset_y, unsigned width/;"	f	typeref:typename:bool
mfb_set_viewport	deps/minifb/src/x11/X11MiniFB.c	/^mfb_set_viewport(struct mfb_window *window, unsigned offset_x, unsigned offset_y, unsigned width/;"	f	typeref:typename:bool
mfb_shcore_dll	deps/minifb/src/windows/WinMiniFB.c	/^HMODULE                           mfb_shcore_dll                    = 0x0;$/;"	v	typeref:typename:HMODULE
mfb_stub	deps/minifb/include/MiniFB_cpp.h	/^    mfb_stub() : m_window(0x0) {}$/;"	f	class:mfb_stub
mfb_stub	deps/minifb/include/MiniFB_cpp.h	/^class mfb_stub {$/;"	c
mfb_timer	deps/minifb/src/MiniFB_internal.h	/^typedef struct mfb_timer {$/;"	s
mfb_timer	deps/minifb/src/MiniFB_internal.h	/^} mfb_timer;$/;"	t	typeref:struct:mfb_timer
mfb_timer_create	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_create() {$/;"	f	typeref:struct:mfb_timer *
mfb_timer_delta	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_delta(struct mfb_timer *tmr) {$/;"	f	typeref:typename:double
mfb_timer_destroy	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_destroy(struct mfb_timer *tmr) {$/;"	f	typeref:typename:void
mfb_timer_get_frequency	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_get_frequency() {$/;"	f	typeref:typename:double
mfb_timer_get_resolution	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_get_resolution() {$/;"	f	typeref:typename:double
mfb_timer_init	deps/minifb/src/MiniFB_linux.c	/^mfb_timer_init() {$/;"	f	typeref:typename:void
mfb_timer_init	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_timer_init() {$/;"	f
mfb_timer_init	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_timer_init() {$/;"	f
mfb_timer_init	deps/minifb/src/windows/WinMiniFB.c	/^mfb_timer_init() {$/;"	f	typeref:typename:void
mfb_timer_now	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_now(struct mfb_timer *tmr) {$/;"	f	typeref:typename:double
mfb_timer_reset	deps/minifb/src/MiniFB_timer.c	/^mfb_timer_reset(struct mfb_timer *tmr) {$/;"	f	typeref:typename:void
mfb_timer_tick	deps/minifb/src/MiniFB_linux.c	/^mfb_timer_tick() {$/;"	f	typeref:typename:uint64_t
mfb_timer_tick	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_timer_tick() {$/;"	f
mfb_timer_tick	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_timer_tick() {$/;"	f
mfb_timer_tick	deps/minifb/src/windows/WinMiniFB.c	/^mfb_timer_tick() {$/;"	f	typeref:typename:uint64_t
mfb_update	deps/minifb/src/MiniFB_common.c	/^mfb_update(struct mfb_window *window, void *buffer) {$/;"	f	typeref:typename:mfb_update_state
mfb_update_events	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_update_events(struct mfb_window *window) {$/;"	f
mfb_update_events	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_update_events(struct mfb_window *window) {$/;"	f
mfb_update_events	deps/minifb/src/wayland/WaylandMiniFB.c	/^mfb_update_events(struct mfb_window *window)$/;"	f	typeref:typename:mfb_update_state
mfb_update_events	deps/minifb/src/windows/WinMiniFB.c	/^mfb_update_events(struct mfb_window *window) {$/;"	f	typeref:typename:mfb_update_state
mfb_update_events	deps/minifb/src/x11/X11MiniFB.c	/^mfb_update_events(struct mfb_window *window) {$/;"	f	typeref:typename:mfb_update_state
mfb_update_ex	deps/minifb/src/android/AndroidMiniFB.c	/^mfb_update_ex(struct mfb_window *window, void *buffer, unsigned width, unsigned height) {$/;"	f	typeref:typename:mfb_update_state
mfb_update_ex	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_update_ex(struct mfb_window *window, void *buffer, unsigned width, unsigned height) {$/;"	f
mfb_update_ex	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_update_ex(struct mfb_window *window, void *buffer, unsigned width, unsigned height) {$/;"	f
mfb_update_ex	deps/minifb/src/wayland/WaylandMiniFB.c	/^mfb_update_ex(struct mfb_window *window, void *buffer, unsigned width, unsigned height)$/;"	f	typeref:typename:mfb_update_state
mfb_update_ex	deps/minifb/src/windows/WinMiniFB.c	/^mfb_update_ex(struct mfb_window *window, void *buffer, unsigned width, unsigned height) {$/;"	f	typeref:typename:mfb_update_state
mfb_update_ex	deps/minifb/src/x11/X11MiniFB.c	/^mfb_update_ex(struct mfb_window *window, void *buffer, unsigned width, unsigned height) {$/;"	f	typeref:typename:mfb_update_state
mfb_update_state	deps/minifb/include/MiniFB_enums.h	/^} mfb_update_state;$/;"	t	typeref:enum:__anond56f22090103
mfb_user32_dll	deps/minifb/src/windows/WinMiniFB.c	/^HMODULE                           mfb_user32_dll                    = 0x0;$/;"	v	typeref:typename:HMODULE
mfb_wait_sync	deps/minifb/src/android/AndroidMiniFB.c	/^mfb_wait_sync(struct mfb_window *window) {$/;"	f	typeref:typename:bool
mfb_wait_sync	deps/minifb/src/ios/iOSMiniFB.m	/^mfb_wait_sync(struct mfb_window *window) {$/;"	f
mfb_wait_sync	deps/minifb/src/macosx/MacMiniFB.m	/^mfb_wait_sync(struct mfb_window *window) {$/;"	f
mfb_wait_sync	deps/minifb/src/wayland/WaylandMiniFB.c	/^mfb_wait_sync(struct mfb_window *window) {$/;"	f	typeref:typename:bool
mfb_wait_sync	deps/minifb/src/windows/WinMiniFB.c	/^mfb_wait_sync(struct mfb_window *window) {$/;"	f	typeref:typename:bool
mfb_wait_sync	deps/minifb/src/x11/X11MiniFB.c	/^mfb_wait_sync(struct mfb_window *window) {$/;"	f	typeref:typename:bool
mfb_window	deps/minifb/src/ios/iOSMiniFB.m	/^struct mfb_window *$/;"	s
mfb_window	deps/minifb/src/macosx/MacMiniFB.m	/^struct mfb_window *$/;"	s
mfb_window	deps/minifb/tests/ios/AppDelegate.m	/^mouse_btn(struct mfb_window *window, mfb_mouse_button button, mfb_key_mod mod, bool isPressed) {$/;"	C	interface:AppDelegate
mfb_window	deps/minifb/tests/ios/AppDelegate.m	/^mouse_move(struct mfb_window *window, int x, int y) {$/;"	C	interface:AppDelegate
mfb_window	deps/minifb/tests/ios/AppDelegate.m	/^resize(struct mfb_window *window, int width, int height) {$/;"	C	interface:AppDelegate
mfb_window	deps/minifb/tests/ios/AppDelegate.m	/^struct mfb_window   *g_window = 0x0;$/;"	s
mfb_window_flags	deps/minifb/include/MiniFB_enums.h	/^} mfb_window_flags;$/;"	t	typeref:enum:__anond56f22090503
minifb	deps/minifb/CMakeLists.txt	/^add_library(minifb STATIC$/;"	t
minifb	deps/minifb/Makefile	/^minifb: deps\/minifb\/CMakeFiles\/minifb.dir\/rule$/;"	t
minifb	deps/minifb/tests/android/app/src/main/cpp/CMakeLists.txt	/^add_library(minifb STATIC$/;"	t
minifb/fast	deps/minifb/Makefile	/^minifb\/fast:$/;"	t
mod_keys	deps/minifb/src/WindowData.h	/^    uint32_t                mod_keys;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
mouseDown:	deps/minifb/src/macosx/OSXView.m	/^- (void)mouseDown:(NSEvent*)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
mouseDragged:	deps/minifb/src/macosx/OSXView.m	/^- (void)mouseDragged:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
mouseEntered:	deps/minifb/src/macosx/OSXView.m	/^- (void)mouseEntered:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
mouseExited:	deps/minifb/src/macosx/OSXView.m	/^- (void)mouseExited:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
mouseMoved:	deps/minifb/src/macosx/OSXView.m	/^- (void)mouseMoved:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
mouseUp:	deps/minifb/src/macosx/OSXView.m	/^- (void)mouseUp:(NSEvent*)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
mouse_btn	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^mouse_btn(struct mfb_window *window, mfb_mouse_button button, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void
mouse_btn	deps/minifb/tests/input_events.c	/^mouse_btn(struct mfb_window *window, mfb_mouse_button button, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void	file:
mouse_btn	deps/minifb/tests/multiple_windows.c	/^mouse_btn(struct mfb_window *window, mfb_mouse_button button, mfb_key_mod mod, bool isPressed) {$/;"	f	typeref:typename:void
mouse_btn_func	deps/minifb/src/WindowData.h	/^    mfb_mouse_button_func   mouse_btn_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_mouse_button_func
mouse_btn_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::mouse_btn_stub(struct mfb_window *window, mfb_mouse_button button, mfb_key_mod mod, bo/;"	f	class:mfb_stub	typeref:typename:void
mouse_button	deps/minifb/tests/input_events_cpp.cpp	/^    void mouse_button(struct mfb_window *window, mfb_mouse_button button, mfb_key_mod mod, bool /;"	f	class:Events	typeref:typename:void	file:
mouse_button_status	deps/minifb/src/WindowData.h	/^    uint8_t                 mouse_button_status[8];$/;"	m	struct:__anon9fa120630108	typeref:typename:uint8_t[8]
mouse_inside	deps/minifb/src/windows/WindowData_Win.h	/^    bool                mouse_inside;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:bool
mouse_move	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^mouse_move(struct mfb_window *window, int x, int y) {$/;"	f	typeref:typename:void
mouse_move	deps/minifb/tests/input_events.c	/^mouse_move(struct mfb_window *window, int x, int y) {$/;"	f	typeref:typename:void	file:
mouse_move	deps/minifb/tests/input_events_cpp.cpp	/^    void mouse_move(struct mfb_window *window, int x, int y) {$/;"	f	class:Events	typeref:typename:void	file:
mouse_move	deps/minifb/tests/multiple_windows.c	/^mouse_move(struct mfb_window *window, int x, int y) {$/;"	f	typeref:typename:void
mouse_move_func	deps/minifb/src/WindowData.h	/^    mfb_mouse_move_func     mouse_move_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_mouse_move_func
mouse_move_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::mouse_move_stub(struct mfb_window *window, int x, int y) {$/;"	f	class:mfb_stub	typeref:typename:void
mouse_pos_x	deps/minifb/src/WindowData.h	/^    int32_t                 mouse_pos_x;$/;"	m	struct:__anon9fa120630108	typeref:typename:int32_t
mouse_pos_y	deps/minifb/src/WindowData.h	/^    int32_t                 mouse_pos_y;$/;"	m	struct:__anon9fa120630108	typeref:typename:int32_t
mouse_scroll	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^mouse_scroll(struct mfb_window *window, mfb_key_mod mod, float deltaX, float deltaY) {$/;"	f	typeref:typename:void
mouse_scroll	deps/minifb/tests/input_events.c	/^mouse_scroll(struct mfb_window *window, mfb_key_mod mod, float deltaX, float deltaY) {$/;"	f	typeref:typename:void	file:
mouse_scroll	deps/minifb/tests/input_events_cpp.cpp	/^    void mouse_scroll(struct mfb_window *window, mfb_key_mod mod, float deltaX, float deltaY) {$/;"	f	class:Events	typeref:typename:void	file:
mouse_scroll	deps/minifb/tests/multiple_windows.c	/^mouse_scroll(struct mfb_window *window, mfb_key_mod mod, float deltaX, float deltaY) {$/;"	f	typeref:typename:void
mouse_wheel_func	deps/minifb/src/WindowData.h	/^    mfb_mouse_scroll_func   mouse_wheel_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_mouse_scroll_func
mouse_wheel_x	deps/minifb/src/WindowData.h	/^    float                   mouse_wheel_x;$/;"	m	struct:__anon9fa120630108	typeref:typename:float
mouse_wheel_y	deps/minifb/src/WindowData.h	/^    float                   mouse_wheel_y;$/;"	m	struct:__anon9fa120630108	typeref:typename:float
mtkView:drawableSizeWillChange:	deps/minifb/src/ios/iOSViewDelegate.m	/^- (void) mtkView:(nonnull MTKView *)view drawableSizeWillChange:(CGSize)size {$/;"	m	implementation:iOSViewDelegate
mtkView:drawableSizeWillChange:	deps/minifb/src/macosx/OSXViewDelegate.m	/^- (void) mtkView:(nonnull MTKView *)view drawableSizeWillChange:(CGSize)size {$/;"	m	implementation:OSXViewDelegate
multiple_windows	deps/minifb/CMakeLists.txt	/^        add_executable(multiple_windows$/;"	t
multiple_windows	deps/minifb/Makefile	/^multiple_windows: deps\/minifb\/CMakeFiles\/multiple_windows.dir\/rule$/;"	t
multiple_windows/fast	deps/minifb/Makefile	/^multiple_windows\/fast:$/;"	t
native_app_glue	deps/minifb/tests/android/app/src/main/cpp/CMakeLists.txt	/^add_library(native_app_glue STATIC$/;"	t
nextValidKeyView	deps/minifb/src/macosx/OSXView.m	/^- (NSView *)nextValidKeyView {$/;"	m	implementation:OSXView	category:USE_METAL_API
noise	deps/minifb/CMakeLists.txt	/^        add_executable(noise$/;"	t
noise	deps/minifb/Makefile	/^noise: deps\/minifb\/CMakeFiles\/noise.dir\/rule$/;"	t
noise	deps/minifb/tests/android/app/src/main/cpp/CMakeLists.txt	/^add_library(noise SHARED$/;"	t
noise	deps/minifb/tests/android/app/src/main/cpp/CMakeLists.txt	/^project(noise)$/;"	p
noise/fast	deps/minifb/Makefile	/^noise\/fast:$/;"	t
obj/%.o	Makefile	/^obj\/%.o: src\/%.c$/;"	t
omega	deps/minifb/tests/android/gradlew.bat	/^:omega$/;"	l
otherMouseDown:	deps/minifb/src/macosx/OSXView.m	/^- (void)otherMouseDown:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
otherMouseDragged:	deps/minifb/src/macosx/OSXView.m	/^- (void)otherMouseDragged:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
otherMouseUp:	deps/minifb/src/macosx/OSXView.m	/^- (void)otherMouseUp:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
pc	include/chip8.h	/^	short int pc;$/;"	m	struct:chip8	typeref:typename:short int
pipeline_state	deps/minifb/src/macosx/OSXViewDelegate.h	/^    id<MTLRenderPipelineState>  pipeline_state;$/;"	E	interface:OSXViewDelegate
pixbuf	include/chip8.h	/^	uint64_t pixbuf[32]; \/\/ 0th byte: pix0, and so on$/;"	m	struct:chip8	typeref:typename:uint64_t[32]
pointer	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_pointer       *pointer;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_pointer *
pointer_axis	deps/minifb/src/wayland/WaylandMiniFB.c	/^pointer_axis(void *data, struct wl_pointer *pointer, uint32_t time, uint32_t axis, wl_fixed_t va/;"	f	typeref:typename:void	file:
pointer_button	deps/minifb/src/wayland/WaylandMiniFB.c	/^pointer_button(void *data, struct wl_pointer *pointer, uint32_t serial, uint32_t time, uint32_t /;"	f	typeref:typename:void	file:
pointer_enter	deps/minifb/src/wayland/WaylandMiniFB.c	/^pointer_enter(void *data, struct wl_pointer *pointer, uint32_t serial, struct wl_surface *surfac/;"	f	typeref:typename:void	file:
pointer_leave	deps/minifb/src/wayland/WaylandMiniFB.c	/^pointer_leave(void *data, struct wl_pointer *pointer, uint32_t serial, struct wl_surface *surfac/;"	f	typeref:typename:void	file:
pointer_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^wl_pointer_listener pointer_listener = {$/;"	v	typeref:typename:const struct wl_pointer_listener	file:
pointer_motion	deps/minifb/src/wayland/WaylandMiniFB.c	/^pointer_motion(void *data, struct wl_pointer *pointer, uint32_t time, wl_fixed_t sx, wl_fixed_t /;"	f	typeref:typename:void	file:
preinstall	deps/minifb/Makefile	/^preinstall: all$/;"	t
preinstall/fast	deps/minifb/Makefile	/^preinstall\/fast:$/;"	t
pretty_square	deps/minifb/tests/hidpi.c	/^pretty_square(unsigned int *p, int dimen) {$/;"	f	typeref:typename:void
previousValidKeyView	deps/minifb/src/macosx/OSXView.m	/^- (NSView *)previousValidKeyView {$/;"	m	implementation:OSXView	category:USE_METAL_API
processEvent	deps/minifb/src/x11/X11MiniFB.c	/^processEvent(SWindowData *window_data, XEvent *event) {$/;"	f	typeref:typename:void	file:
processEvents	deps/minifb/src/x11/X11MiniFB.c	/^processEvents(SWindowData *window_data) {$/;"	f	typeref:typename:void	file:
rebuild_cache	deps/minifb/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	deps/minifb/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
redraw_GL	deps/minifb/src/gl/MiniFB_GL.c	/^redraw_GL(SWindowData *window_data, const void *pixels) {$/;"	f	typeref:typename:void
reg	include/chip8.h	/^	char reg[16];$/;"	m	struct:chip8	typeref:typename:char[16]
registry	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_registry      *registry;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_registry *
registry_global	deps/minifb/src/wayland/WaylandMiniFB.c	/^registry_global(void *data, struct wl_registry *registry, uint32_t id, char const *iface, uint32/;"	f	typeref:typename:void	file:
registry_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^wl_registry_listener registry_listener = {$/;"	v	typeref:typename:const struct wl_registry_listener	file:
removeWindowData	deps/minifb/src/macosx/OSXWindow.h	/^- (void) removeWindowData;$/;"	m	interface:OSXWindow
removeWindowData	deps/minifb/src/macosx/OSXWindow.m	/^- (void) removeWindowData {$/;"	m	implementation:OSXWindow
resize	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^resize(struct mfb_window *window, int width, int height) {$/;"	f	typeref:typename:void
resize	deps/minifb/tests/input_events.c	/^resize(struct mfb_window *window, int width, int height) {$/;"	f	typeref:typename:void	file:
resize	deps/minifb/tests/input_events_cpp.cpp	/^    void resize(struct mfb_window *window, int width, int height) {$/;"	f	class:Events	typeref:typename:void	file:
resize	deps/minifb/tests/multiple_windows.c	/^resize(struct mfb_window *window, int width, int height) {$/;"	f	typeref:typename:void
resize	deps/minifb/tests/noise.c	/^resize(struct mfb_window *window, int width, int height) {$/;"	f	typeref:typename:void
resizeRect	deps/minifb/src/macosx/OSXView.m	/^- (NSRect)resizeRect {$/;"	m	implementation:OSXView	category:USE_METAL_API
resizeTextures	deps/minifb/src/ios/iOSViewDelegate.h	/^- (void) resizeTextures;$/;"	m	interface:iOSViewDelegate
resizeTextures	deps/minifb/src/ios/iOSViewDelegate.m	/^- (void) resizeTextures {$/;"	m	implementation:iOSViewDelegate
resizeTextures	deps/minifb/src/macosx/OSXViewDelegate.h	/^- (void) resizeTextures;$/;"	m	interface:OSXViewDelegate
resizeTextures	deps/minifb/src/macosx/OSXViewDelegate.m	/^- (void) resizeTextures {$/;"	m	implementation:OSXViewDelegate
resize_GL	deps/minifb/src/gl/MiniFB_GL.c	/^resize_GL(SWindowData *window_data) {$/;"	f	typeref:typename:void
resize_dst	deps/minifb/src/MiniFB_internal.c	/^resize_dst(SWindowData *window_data, uint32_t width, uint32_t height) {$/;"	f	typeref:typename:void
resize_func	deps/minifb/src/WindowData.h	/^    mfb_resize_func         resize_func;$/;"	m	struct:__anon9fa120630108	typeref:typename:mfb_resize_func
resize_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::resize_stub(struct mfb_window *window, int width, int height) {$/;"	f	class:mfb_stub	typeref:typename:void
rightMouseDown:	deps/minifb/src/macosx/OSXView.m	/^- (void)rightMouseDown:(NSEvent*)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
rightMouseDragged:	deps/minifb/src/macosx/OSXView.m	/^- (void)rightMouseDragged:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
rightMouseUp:	deps/minifb/src/macosx/OSXView.m	/^- (void)rightMouseUp:(NSEvent*)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
s_delete_window_atom	deps/minifb/src/x11/X11MiniFB.c	/^static Atom s_delete_window_atom;$/;"	v	typeref:typename:Atom	file:
s_window_style	deps/minifb/src/windows/WinMiniFB.c	/^long    s_window_style = WS_POPUP | WS_SYSMENU | WS_CAPTION;$/;"	v	typeref:typename:long
save	deps/minifb/tests/android/gradlew	/^save () {$/;"	f
screen	deps/minifb/src/x11/WindowData_X11.h	/^    int                 screen;$/;"	m	struct:__anon24d459e50108	typeref:typename:int
scrollWheel:	deps/minifb/src/macosx/OSXView.m	/^- (void)scrollWheel:(NSEvent *)event {$/;"	m	implementation:OSXView	category:USE_METAL_API
scroll_stub	deps/minifb/src/MiniFB_cpp.cpp	/^mfb_stub::scroll_stub(struct mfb_window *window, mfb_key_mod mod, float deltaX, float deltaY) {$/;"	f	class:mfb_stub	typeref:typename:void
seat	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_seat          *seat;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_seat *
seat_capabilities	deps/minifb/src/wayland/WaylandMiniFB.c	/^seat_capabilities(void *data, struct wl_seat *seat, enum wl_seat_capability caps)$/;"	f	typeref:typename:void	file:
seat_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^wl_seat_listener seat_listener = {$/;"	v	typeref:typename:const struct wl_seat_listener	file:
seat_name	deps/minifb/src/wayland/WaylandMiniFB.c	/^seat_name(void *data, struct wl_seat *seat, const char *name) {$/;"	f	typeref:typename:void	file:
seat_version	deps/minifb/src/wayland/WindowData_Way.h	/^    uint32_t                seat_version;$/;"	m	struct:__anon44bf58f20108	typeref:typename:uint32_t
selectedRange	deps/minifb/src/macosx/OSXView.m	/^- (NSRange)selectedRange {$/;"	m	implementation:OSXView	category:USE_METAL_API
semaphore	deps/minifb/src/macosx/OSXViewDelegate.h	/^    dispatch_semaphore_t        semaphore;    \/\/ Used for syncing with CPU\/GPU$/;"	E	interface:OSXViewDelegate
setContentSize:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
setContentView:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
setMarkedText:selectedRange:replacementRange:	deps/minifb/src/macosx/OSXView.m	/^- (void)setMarkedText:(nonnull id)string selectedRange:(NSRange)selectedRange replacementRange:(/;"	m	implementation:OSXView	category:USE_METAL_API
set_target_fps_aux	deps/minifb/src/MiniFB_internal.c	/^set_target_fps_aux() {$/;"	f	typeref:typename:void
set_target_fps_aux	deps/minifb/src/gl/MiniFB_GL.c	/^set_target_fps_aux() {$/;"	f	typeref:typename:void
set_target_fps_aux	deps/minifb/src/macosx/OSXViewDelegate.m	/^set_target_fps_aux() {$/;"	f
setup_pixel_format	deps/minifb/src/gl/MiniFB_GL.c	/^setup_pixel_format(HDC hDC) {$/;"	f	typeref:typename:bool
setup_pixel_format	deps/minifb/src/gl/MiniFB_GL.c	/^setup_pixel_format(SWindowData_X11 *window_data_x11) {$/;"	f	typeref:typename:bool
shell	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_shell         *shell;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_shell *
shell_surface	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_shell_surface *shell_surface;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_shell_surface *
shell_surface_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^static const struct wl_shell_surface_listener shell_surface_listener = {$/;"	v	typeref:typename:const struct wl_shell_surface_listener	file:
shm	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_shm           *shm;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_shm *
shm_format	deps/minifb/src/wayland/WaylandMiniFB.c	/^shm_format(void *data, struct wl_shm *shm, uint32_t format)$/;"	f	typeref:typename:void	file:
shm_format	deps/minifb/src/wayland/WindowData_Way.h	/^    uint32_t                shm_format;$/;"	m	struct:__anon44bf58f20108	typeref:typename:uint32_t
shm_listener	deps/minifb/src/wayland/WaylandMiniFB.c	/^wl_shm_listener shm_listener = {$/;"	v	typeref:typename:const struct wl_shm_listener	file:
shm_pool	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_shm_pool      *shm_pool;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_shm_pool *
shm_ptr	deps/minifb/src/wayland/WindowData_Way.h	/^    uint32_t                *shm_ptr;$/;"	m	struct:__anon44bf58f20108	typeref:typename:uint32_t *
specific	deps/minifb/src/WindowData.h	/^    void                    *specific;$/;"	m	struct:__anon9fa120630108	typeref:typename:void *
src/MiniFB_common.c.i	deps/minifb/Makefile	/^src\/MiniFB_common.c.i:$/;"	t
src/MiniFB_common.c.o	deps/minifb/Makefile	/^src\/MiniFB_common.c.o:$/;"	t
src/MiniFB_common.c.s	deps/minifb/Makefile	/^src\/MiniFB_common.c.s:$/;"	t
src/MiniFB_common.i	deps/minifb/Makefile	/^src\/MiniFB_common.i: src\/MiniFB_common.c.i$/;"	t
src/MiniFB_common.o	deps/minifb/Makefile	/^src\/MiniFB_common.o: src\/MiniFB_common.c.o$/;"	t
src/MiniFB_common.s	deps/minifb/Makefile	/^src\/MiniFB_common.s: src\/MiniFB_common.c.s$/;"	t
src/MiniFB_cpp.cpp.i	deps/minifb/Makefile	/^src\/MiniFB_cpp.cpp.i:$/;"	t
src/MiniFB_cpp.cpp.o	deps/minifb/Makefile	/^src\/MiniFB_cpp.cpp.o:$/;"	t
src/MiniFB_cpp.cpp.s	deps/minifb/Makefile	/^src\/MiniFB_cpp.cpp.s:$/;"	t
src/MiniFB_cpp.i	deps/minifb/Makefile	/^src\/MiniFB_cpp.i: src\/MiniFB_cpp.cpp.i$/;"	t
src/MiniFB_cpp.o	deps/minifb/Makefile	/^src\/MiniFB_cpp.o: src\/MiniFB_cpp.cpp.o$/;"	t
src/MiniFB_cpp.s	deps/minifb/Makefile	/^src\/MiniFB_cpp.s: src\/MiniFB_cpp.cpp.s$/;"	t
src/MiniFB_internal.c.i	deps/minifb/Makefile	/^src\/MiniFB_internal.c.i:$/;"	t
src/MiniFB_internal.c.o	deps/minifb/Makefile	/^src\/MiniFB_internal.c.o:$/;"	t
src/MiniFB_internal.c.s	deps/minifb/Makefile	/^src\/MiniFB_internal.c.s:$/;"	t
src/MiniFB_internal.i	deps/minifb/Makefile	/^src\/MiniFB_internal.i: src\/MiniFB_internal.c.i$/;"	t
src/MiniFB_internal.o	deps/minifb/Makefile	/^src\/MiniFB_internal.o: src\/MiniFB_internal.c.o$/;"	t
src/MiniFB_internal.s	deps/minifb/Makefile	/^src\/MiniFB_internal.s: src\/MiniFB_internal.c.s$/;"	t
src/MiniFB_linux.c.i	deps/minifb/Makefile	/^src\/MiniFB_linux.c.i:$/;"	t
src/MiniFB_linux.c.o	deps/minifb/Makefile	/^src\/MiniFB_linux.c.o:$/;"	t
src/MiniFB_linux.c.s	deps/minifb/Makefile	/^src\/MiniFB_linux.c.s:$/;"	t
src/MiniFB_linux.i	deps/minifb/Makefile	/^src\/MiniFB_linux.i: src\/MiniFB_linux.c.i$/;"	t
src/MiniFB_linux.o	deps/minifb/Makefile	/^src\/MiniFB_linux.o: src\/MiniFB_linux.c.o$/;"	t
src/MiniFB_linux.s	deps/minifb/Makefile	/^src\/MiniFB_linux.s: src\/MiniFB_linux.c.s$/;"	t
src/MiniFB_timer.c.i	deps/minifb/Makefile	/^src\/MiniFB_timer.c.i:$/;"	t
src/MiniFB_timer.c.o	deps/minifb/Makefile	/^src\/MiniFB_timer.c.o:$/;"	t
src/MiniFB_timer.c.s	deps/minifb/Makefile	/^src\/MiniFB_timer.c.s:$/;"	t
src/MiniFB_timer.i	deps/minifb/Makefile	/^src\/MiniFB_timer.i: src\/MiniFB_timer.c.i$/;"	t
src/MiniFB_timer.o	deps/minifb/Makefile	/^src\/MiniFB_timer.o: src\/MiniFB_timer.c.o$/;"	t
src/MiniFB_timer.s	deps/minifb/Makefile	/^src\/MiniFB_timer.s: src\/MiniFB_timer.c.s$/;"	t
src/gl/MiniFB_GL.c.i	deps/minifb/Makefile	/^src\/gl\/MiniFB_GL.c.i:$/;"	t
src/gl/MiniFB_GL.c.o	deps/minifb/Makefile	/^src\/gl\/MiniFB_GL.c.o:$/;"	t
src/gl/MiniFB_GL.c.s	deps/minifb/Makefile	/^src\/gl\/MiniFB_GL.c.s:$/;"	t
src/gl/MiniFB_GL.i	deps/minifb/Makefile	/^src\/gl\/MiniFB_GL.i: src\/gl\/MiniFB_GL.c.i$/;"	t
src/gl/MiniFB_GL.o	deps/minifb/Makefile	/^src\/gl\/MiniFB_GL.o: src\/gl\/MiniFB_GL.c.o$/;"	t
src/gl/MiniFB_GL.s	deps/minifb/Makefile	/^src\/gl\/MiniFB_GL.s: src\/gl\/MiniFB_GL.c.s$/;"	t
src/x11/X11MiniFB.c.i	deps/minifb/Makefile	/^src\/x11\/X11MiniFB.c.i:$/;"	t
src/x11/X11MiniFB.c.o	deps/minifb/Makefile	/^src\/x11\/X11MiniFB.c.o:$/;"	t
src/x11/X11MiniFB.c.s	deps/minifb/Makefile	/^src\/x11\/X11MiniFB.c.s:$/;"	t
src/x11/X11MiniFB.i	deps/minifb/Makefile	/^src\/x11\/X11MiniFB.i: src\/x11\/X11MiniFB.c.i$/;"	t
src/x11/X11MiniFB.o	deps/minifb/Makefile	/^src\/x11\/X11MiniFB.o: src\/x11\/X11MiniFB.c.o$/;"	t
src/x11/X11MiniFB.s	deps/minifb/Makefile	/^src\/x11\/X11MiniFB.s: src\/x11\/X11MiniFB.c.s$/;"	t
st	include/chip8.h	/^	char st;$/;"	m	struct:chip8	typeref:typename:char
stack	include/chip8.h	/^	short int stack[12];$/;"	m	struct:chip8	typeref:typename:short int[12]
stack_lvl	include/chip8.h	/^	int stack_lvl;$/;"	m	struct:chip8	typeref:typename:int
start_time	deps/minifb/src/MiniFB_internal.h	/^    int64_t     start_time;$/;"	m	struct:mfb_timer	typeref:typename:int64_t
status	deps/minifb/src/x11/X11MiniFB.c	/^            unsigned long   status;$/;"	m	struct:mfb_open_ex::StyleHints	typeref:typename:unsigned long	file:
stretch_image	deps/minifb/src/MiniFB_internal.c	/^stretch_image(uint32_t *srcImage, uint32_t srcX, uint32_t srcY, uint32_t srcWidth, uint32_t srcH/;"	f	typeref:typename:void
stub_vector	deps/minifb/src/MiniFB_cpp.cpp	/^    struct stub_vector {$/;"	s	function:mfb_stub::GetInstance	file:
surf	include/chip8.h	/^	SDL_Surface *surf;$/;"	m	struct:chip8	typeref:typename:SDL_Surface *
surface	deps/minifb/src/wayland/WindowData_Way.h	/^    struct wl_surface       *surface;$/;"	m	struct:__anon44bf58f20108	typeref:struct:wl_surface *
tests/hidpi.c.i	deps/minifb/Makefile	/^tests\/hidpi.c.i:$/;"	t
tests/hidpi.c.o	deps/minifb/Makefile	/^tests\/hidpi.c.o:$/;"	t
tests/hidpi.c.s	deps/minifb/Makefile	/^tests\/hidpi.c.s:$/;"	t
tests/hidpi.i	deps/minifb/Makefile	/^tests\/hidpi.i: tests\/hidpi.c.i$/;"	t
tests/hidpi.o	deps/minifb/Makefile	/^tests\/hidpi.o: tests\/hidpi.c.o$/;"	t
tests/hidpi.s	deps/minifb/Makefile	/^tests\/hidpi.s: tests\/hidpi.c.s$/;"	t
tests/input_events.c.i	deps/minifb/Makefile	/^tests\/input_events.c.i:$/;"	t
tests/input_events.c.o	deps/minifb/Makefile	/^tests\/input_events.c.o:$/;"	t
tests/input_events.c.s	deps/minifb/Makefile	/^tests\/input_events.c.s:$/;"	t
tests/input_events.i	deps/minifb/Makefile	/^tests\/input_events.i: tests\/input_events.c.i$/;"	t
tests/input_events.o	deps/minifb/Makefile	/^tests\/input_events.o: tests\/input_events.c.o$/;"	t
tests/input_events.s	deps/minifb/Makefile	/^tests\/input_events.s: tests\/input_events.c.s$/;"	t
tests/input_events_cpp.cpp.i	deps/minifb/Makefile	/^tests\/input_events_cpp.cpp.i:$/;"	t
tests/input_events_cpp.cpp.o	deps/minifb/Makefile	/^tests\/input_events_cpp.cpp.o:$/;"	t
tests/input_events_cpp.cpp.s	deps/minifb/Makefile	/^tests\/input_events_cpp.cpp.s:$/;"	t
tests/input_events_cpp.i	deps/minifb/Makefile	/^tests\/input_events_cpp.i: tests\/input_events_cpp.cpp.i$/;"	t
tests/input_events_cpp.o	deps/minifb/Makefile	/^tests\/input_events_cpp.o: tests\/input_events_cpp.cpp.o$/;"	t
tests/input_events_cpp.s	deps/minifb/Makefile	/^tests\/input_events_cpp.s: tests\/input_events_cpp.cpp.s$/;"	t
tests/multiple_windows.c.i	deps/minifb/Makefile	/^tests\/multiple_windows.c.i:$/;"	t
tests/multiple_windows.c.o	deps/minifb/Makefile	/^tests\/multiple_windows.c.o:$/;"	t
tests/multiple_windows.c.s	deps/minifb/Makefile	/^tests\/multiple_windows.c.s:$/;"	t
tests/multiple_windows.i	deps/minifb/Makefile	/^tests\/multiple_windows.i: tests\/multiple_windows.c.i$/;"	t
tests/multiple_windows.o	deps/minifb/Makefile	/^tests\/multiple_windows.o: tests\/multiple_windows.c.o$/;"	t
tests/multiple_windows.s	deps/minifb/Makefile	/^tests\/multiple_windows.s: tests\/multiple_windows.c.s$/;"	t
tests/noise.c.i	deps/minifb/Makefile	/^tests\/noise.c.i:$/;"	t
tests/noise.c.o	deps/minifb/Makefile	/^tests\/noise.c.o:$/;"	t
tests/noise.c.s	deps/minifb/Makefile	/^tests\/noise.c.s:$/;"	t
tests/noise.i	deps/minifb/Makefile	/^tests\/noise.i: tests\/noise.c.i$/;"	t
tests/noise.o	deps/minifb/Makefile	/^tests\/noise.o: tests\/noise.c.o$/;"	t
tests/noise.s	deps/minifb/Makefile	/^tests\/noise.s: tests\/noise.c.s$/;"	t
text_id	deps/minifb/src/windows/WindowData_Win.h	/^    uint32_t            text_id;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:uint32_t
text_id	deps/minifb/src/x11/WindowData_X11.h	/^    uint32_t            text_id;$/;"	m	struct:__anon24d459e50108	typeref:typename:uint32_t
texture_buffers	deps/minifb/src/macosx/OSXViewDelegate.h	/^    id<MTLTexture>              texture_buffers[MaxBuffersInFlight];$/;"	E	interface:OSXViewDelegate
time	deps/minifb/src/MiniFB_internal.h	/^    uint64_t    time;$/;"	m	struct:mfb_timer	typeref:typename:uint64_t
timer	deps/minifb/src/android/WindowData_Android.h	/^    struct mfb_timer    *timer;$/;"	m	struct:__anon776e3c130108	typeref:struct:mfb_timer *
timer	deps/minifb/src/macosx/WindowData_OSX.h	/^    struct mfb_timer    *timer;$/;"	m	struct:__anoncaa6ffd60108	typeref:struct:mfb_timer *
timer	deps/minifb/src/wayland/WindowData_Way.h	/^    struct mfb_timer        *timer;$/;"	m	struct:__anon44bf58f20108	typeref:struct:mfb_timer *
timer	deps/minifb/src/windows/WindowData_Win.h	/^    struct mfb_timer    *timer;$/;"	m	struct:__anon65bf9bca0108	typeref:struct:mfb_timer *
timer	deps/minifb/src/x11/WindowData_X11.h	/^    struct mfb_timer   *timer;$/;"	m	struct:__anon24d459e50108	typeref:struct:mfb_timer *
touchesBegan:withEvent:	deps/minifb/src/ios/iOSView.m	/^- (void) touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event {$/;"	m	implementation:iOSView
touchesCancelled:withEvent:	deps/minifb/src/ios/iOSView.m	/^- (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event {$/;"	m	implementation:iOSView
touchesEnded:withEvent:	deps/minifb/src/ios/iOSView.m	/^- (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event {$/;"	m	implementation:iOSView
touchesMoved:withEvent:	deps/minifb/src/ios/iOSView.m	/^- (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event {$/;"	m	implementation:iOSView
tracking_area	deps/minifb/src/macosx/OSXView.h	/^    @private NSTrackingArea *tracking_area;$/;"	E	interface:OSXView
translateKeyCodeA	deps/minifb/src/x11/X11MiniFB.c	/^static int translateKeyCodeA(int keySym) {$/;"	f	typeref:typename:int	file:
translateKeyCodeB	deps/minifb/src/x11/X11MiniFB.c	/^translateKeyCodeB(int keySym) {$/;"	f	typeref:typename:int	file:
translate_key	deps/minifb/src/windows/WinMiniFB.c	/^translate_key(unsigned int wParam, unsigned long lParam) {$/;"	f	typeref:typename:mfb_key
translate_key	deps/minifb/src/x11/X11MiniFB.c	/^translate_key(int scancode) {$/;"	f	typeref:typename:int
translate_mod	deps/minifb/src/windows/WinMiniFB.c	/^translate_mod() {$/;"	f	typeref:typename:uint32_t
translate_mod	deps/minifb/src/x11/X11MiniFB.c	/^translate_mod(int state) {$/;"	f	typeref:typename:int
translate_mod_ex	deps/minifb/src/x11/X11MiniFB.c	/^translate_mod_ex(int key, int state, int is_pressed) {$/;"	f	typeref:typename:int
trial.ch8	Makefile	/^trial.ch8: trial.raw$/;"	t
unmarkText	deps/minifb/src/macosx/OSXView.m	/^- (void)unmarkText {$/;"	m	implementation:OSXView	category:USE_METAL_API
updateTrackingAreas	deps/minifb/src/macosx/OSXView.m	/^- (void)updateTrackingAreas {$/;"	m	implementation:OSXView	category:USE_METAL_API
update_events	deps/minifb/src/macosx/MacMiniFB.m	/^update_events(SWindowData *window_data) {$/;"	f
user_data	deps/minifb/src/WindowData.h	/^    void                    *user_data;$/;"	m	struct:__anon9fa120630108	typeref:typename:void *
validAttributesForMarkedText	deps/minifb/src/macosx/OSXView.m	/^- (nonnull NSArray<NSString *> *)validAttributesForMarkedText {$/;"	m	implementation:OSXView	category:USE_METAL_API
vertices	deps/minifb/src/ios/WindowData_IOS.h	/^    Vertex              vertices[4];$/;"	m	struct:__anon6423c6e70108	typeref:typename:Vertex[4]
vertices	deps/minifb/src/macosx/WindowData_OSX.h	/^        Vertex                      vertices[4];$/;"	m	struct:__anoncaa6ffd60108::__anoncaa6ffd60208	typeref:typename:Vertex[4]
viewController	deps/minifb/src/macosx/WindowData_OSX.h	/^    OSXViewDelegate     *viewController;$/;"	m	struct:__anoncaa6ffd60108	typeref:typename:OSXViewDelegate *
viewDidLoad	deps/minifb/src/ios/iOSViewController.m	/^{$/;"	m	implementation:iOSViewController
viewDidMoveToWindow	deps/minifb/src/macosx/OSXView.m	/^- (void)viewDidMoveToWindow {$/;"	m	implementation:OSXView	category:USE_METAL_API
view_delegate	deps/minifb/src/ios/WindowData_IOS.h	/^    iOSViewDelegate     *view_delegate;$/;"	m	struct:__anon6423c6e70108	typeref:typename:iOSViewDelegate *
void	deps/minifb/tests/ios/AppDelegate.m	/^void$/;"	C	interface:AppDelegate
w	deps/minifb/src/ios/WindowData_IOS.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
w	deps/minifb/src/macosx/WindowData_OSX.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
warn	deps/minifb/tests/android/gradlew	/^warn () {$/;"	f
wc	deps/minifb/src/windows/WindowData_Win.h	/^    WNDCLASS            wc;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:WNDCLASS
width	deps/minifb/tests/ios/AppDelegate.m	/^    g_width  = width;$/;"	E	interface:AppDelegate
willClose	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
win9xME_args	deps/minifb/tests/android/gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args_slurp	deps/minifb/tests/android/gradlew.bat	/^:win9xME_args_slurp$/;"	l
window	deps/minifb/src/macosx/WindowData_OSX.h	/^    OSXWindow           *window;$/;"	m	struct:__anoncaa6ffd60108	typeref:typename:OSXWindow *
window	deps/minifb/src/windows/WindowData_Win.h	/^    HWND                window;$/;"	m	struct:__anon65bf9bca0108	typeref:typename:HWND
window	deps/minifb/src/x11/WindowData_X11.h	/^    Window              window;$/;"	m	struct:__anon24d459e50108	typeref:typename:Window
window	deps/minifb/tests/ios/AppDelegate.h	/^@property (strong, nonatomic) UIWindow *window;$/;"	p	interface:AppDelegate
windowDidBecomeKey:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
windowDidResignKey:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
windowDidResize:	deps/minifb/src/macosx/OSXWindow.m	/^- (void)windowDidResize:(NSNotification *)notification {$/;"	m	implementation:OSXWindow
windowShouldClose:	deps/minifb/src/macosx/OSXWindow.m	/^{$/;"	m	implementation:OSXWindow
windowWillClose:	deps/minifb/src/macosx/OSXWindow.m	/^- (void)windowWillClose:(NSNotification *)notification {$/;"	m	implementation:OSXWindow
window_data	deps/minifb/src/ios/iOSView.h	/^    @public SWindowData *window_data;$/;"	E	interface:iOSView
window_data	deps/minifb/src/ios/iOSViewController.h	/^    @public SWindowData *window_data;$/;"	E	interface:iOSViewController
window_data	deps/minifb/src/macosx/OSXView.h	/^    @public SWindowData     *window_data;$/;"	E	interface:OSXView
window_data	deps/minifb/src/macosx/OSXViewDelegate.h	/^    @public SWindowData         *window_data;$/;"	E	interface:OSXViewDelegate
window_data	deps/minifb/src/macosx/OSXWindow.h	/^    @public SWindowData *window_data;$/;"	E	interface:OSXWindow
window_data_osx	deps/minifb/src/macosx/OSXViewDelegate.h	/^    @public SWindowData_OSX     *window_data_osx;$/;"	E	interface:OSXViewDelegate
window_height	deps/minifb/src/WindowData.h	/^    uint32_t                window_height;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
window_width	deps/minifb/src/WindowData.h	/^    uint32_t                window_width;$/;"	m	struct:__anon9fa120630108	typeref:typename:uint32_t
x	deps/minifb/src/ios/WindowData_IOS.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
x	deps/minifb/src/macosx/WindowData_OSX.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
x	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^    int     x, y;$/;"	m	struct:__anon3dcd00920108	typeref:typename:int	file:
y	deps/minifb/src/ios/WindowData_IOS.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
y	deps/minifb/src/macosx/WindowData_OSX.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
y	deps/minifb/tests/android/app/src/main/cpp/noise.c	/^    int     x, y;$/;"	m	struct:__anon3dcd00920108	typeref:typename:int	file:
y	deps/minifb/tests/ios/AppDelegate.m	/^    NSLog(@"Touch moved %d, %d", x, y);$/;"	E	interface:AppDelegate
z	deps/minifb/src/ios/WindowData_IOS.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
z	deps/minifb/src/macosx/WindowData_OSX.h	/^    float x, y, z, w;$/;"	m	struct:Vertex	typeref:typename:float
zipStoreBase	deps/minifb/tests/android/gradle/wrapper/gradle-wrapper.properties	/^zipStoreBase=GRADLE_USER_HOME$/;"	k
zipStorePath	deps/minifb/tests/android/gradle/wrapper/gradle-wrapper.properties	/^zipStorePath=wrapper\/dists$/;"	k
~stub_vector	deps/minifb/src/MiniFB_cpp.cpp	/^        ~stub_vector() {$/;"	f	struct:mfb_stub::GetInstance::stub_vector	file:
